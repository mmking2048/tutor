00003000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 11/22/2018 8:21:15 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : ECE 441 Design Project
00000000                             3  * Written by : Michelle Yang
00000000                             4  * Date       : 11/9/2018
00000000                             5  * Description: Simple operating system for Easy 68K
00000000                             6  *-----------------------------------------------------------
00000000                             7  *-----------------------------------------------------------
00000000                             8  * Data segment
00000000                             9  *-----------------------------------------------------------
00001000                            10          ORG     $1000
00001000                            11          
00001000= 4D 4F 4E 49 54 4F ...     12  PROMPT  DC.B    'MONITOR441> ',0 ;prompt
0000100D= 49 4E 56 41 4C 49 ...     13  INVALID DC.B    'INVALID COMMAND',0
0000101D                            14  
0000101D                            15  INPUT   DS.B    80              ;buffer for commands
0000106D                            16  
0000106D                            17  COMP_TBL                        ;table of all commands
0000106D= 48 45 4C 50 00            18          DC.B    'HELP',0
00001072                            19          DS.B    2               ;padding so table is aligned at 6 bytes
00001074= 4D 44 53 50 20 00         20          DC.B    'MDSP ',0
0000107A                            21          DS.B    1
0000107B= 53 4F 52 54 57 20 00      22          DC.B    'SORTW ',0
00001082= 4D 4D 20 00               23          DC.B    'MM ',0
00001086                            24          DS.B    3
00001089= 4D 53 20 00               25          DC.B    'MS ',0
0000108D                            26          DS.B    3
00001090= 42 46 20 00               27          DC.B    'BF ',0
00001094                            28          DS.B    3
00001097= 42 4D 4F 56 20 00         29          DC.B    'BMOV ',0
0000109D                            30          DS.B    1
0000109E= 42 54 53 54 20 00         31          DC.B    'BTST ',0
000010A4                            32          DS.B    1
000010A5= 42 53 43 48 20 00         33          DC.B    'BSCH ',0
000010AB                            34          DS.B    1
000010AC= 47 4F 20 00               35          DC.B    'GO ',0
000010B0                            36          DS.B    3
000010B3= 44 46 00                  37          DC.B    'DF',0
000010B6                            38          DS.B    4
000010BA= 45 58 49 54 00            39          DC.B    'EXIT',0
000010BF                            40          DS.B    2
000010C1                            41  
000010C1= 48 45 4C 50 3A 20 ...     42  HELP1   DC.B    'HELP: displays this help message',0
000010E2= 4D 44 53 50 20 3C ...     43  HELP2   DC.B    'MDSP <address1> <address2>: outputs address and memory contents from <address1> to <address2>',0
00001140= 4D 44 53 50 20 3C ...     44  HELP2A  DC.B    'MDSP <address1>: outputs address and memory from <address1> to <address + 16 bytes',0
00001193= 53 4F 52 54 57 20 ...     45  HELP3   DC.B    'SORTW <address1> <address2> <order>: sort block of memory between <address1> and <address2>, in ascending (A) or descending (D) order',0
00001219= 4D 4D 20 3C 61 64 ...     46  HELP4   DC.B    'MM <address> <size>: display memory and modify/enter new data, showing byte (B), word (W), or longword (L) bytes',0
0000128A= 4D 53 20 3C 61 64 ...     47  HELP5   DC.B    'MS <address> <data>: set memory at <address> to <data>, which is of type ASCII or hex',0
000012E0= 42 46 20 3C 61 64 ...     48  HELP6   DC.B    'BF <address1> <address2> <data>: fills memory between <address1> and <address2> with <data>, which is word size',0
00001350= 42 4D 4F 56 20 3C ...     49  HELP7   DC.B    'BMOV <address1> <address2> <address3>: move block of memory between <address1> and <address2> to location starting at <address3>',0
000013D1= 42 54 53 54 20 3C ...     50  HELP8   DC.B    'BTST <address1> <address2>: test a block of memory between <address1> and <address2>',0
00001426= 42 53 43 48 20 3C ...     51  HELP9   DC.B    'BSCH <address1> <address2> <string>: search for <string> between <address1> and <address2>',0
00001481= 47 4F 20 3C 61 64 ...     52  HELP10  DC.B    'GO <address>: execute program at <address>',0
000014AC= 44 46 3A 20 64 69 ...     53  HELP11  DC.B    'DF: display registers and values',0
000014CD= 45 58 49 54 3A 20 ...     54  HELP12  DC.B    'EXIT: terminate the program',0
000014E9                            55  
000014E9                            56  *-----------------------------------------------------------
000014E9                            57  * Program segment
000014E9                            58  *-----------------------------------------------------------        
00003000                            59          ORG     $3000
00003000                            60  *Start here: set up and call to main        
00003000  6100 002C                 61  START   BSR     SETUP           ;set up here
00003004  6100 0008                 62          BSR     MAIN            ;call main
00003008                            63          
00003008  103C 0009                 64          MOVE.B  #9,D0           ;exit program
0000300C  4E4F                      65          TRAP    #15
0000300E                            66          
0000300E                            67  * Main method
0000300E  227C 00001000             68  MAIN    MOVEA.L #PROMPT,A1
00003014  103C 000E                 69          MOVE.B  #14,D0
00003018  4E4F                      70          TRAP    #15             ;print prompt
0000301A                            71          
0000301A  227C 0000101D             72          MOVEA.L #INPUT,A1
00003020  103C 0002                 73          MOVE.B  #2,D0
00003024  4E4F                      74          TRAP    #15             ;read command
00003026                            75  
00003026  6100 0048                 76          BSR     PARSE
0000302A                            77          
0000302A  60E2                      78          BRA     MAIN            ;get next command
0000302C                            79          
0000302C  4E75                      80  EXITMAIN RTS
0000302E                            81  
0000302E                            82  *-----------------------------------------------------------
0000302E                            83  * Setup exception handler
0000302E                            84  *-----------------------------------------------------------
0000302E  21F9 00003450 0008        85  SETUP   MOVE.L  BUS,$008
00003036  21F9 00003452 000C        86          MOVE.L  ADDR,$00C
0000303E  21F9 00003454 0010        87          MOVE.L  ILLI,$010
00003046  21F9 00003458 0014        88          MOVE.L  DIV0,$014
0000304E  21F9 0000345A 0018        89          MOVE.L  CHK,$018
00003056  21F9 00003456 0020        90          MOVE.L  PRIV,$020
0000305E  21F9 0000345C 0028        91          MOVE.L  LNEA,$028
00003066  21F9 0000345E 002C        92          MOVE.L  LNEF,$02C
0000306E  4E75                      93          RTS
00003070                            94  
00003070                            95  *-----------------------------------------------------------
00003070                            96  * Parse commands
00003070                            97  *-----------------------------------------------------------
00003070  48E7 8070                 98  PARSE   MOVEM.L A1/A2/A3/D0,-(SP)     ;save registers
00003074  227C 0000101D             99          MOVEA.L #INPUT,A1       ;get front of string
0000307A                           100          
0000307A  247C 0000106D            101          MOVEA.L #COMP_TBL,A2    ;get item in command string table
00003080  267C 0000106D            102          MOVEA.L #COMP_TBL,A3
00003086                           103          
00003086  7004                     104          MOVE.L  #4,D0           ;set D0 to number of chars to check
00003088                           105  
00003088  B709                     106  PHELP   CMP.B   (A1)+,(A3)+     ;is command HELP?
0000308A  56C8 FFFC                107          DBNE    D0,PHELP        ;check next character
0000308E  6600 000A                108          BNE     NHELP           ;if did not match, check next string
00003092  6100 016E                109          BSR     HELP
00003096  6000 0158                110          BRA     EXITPARSE
0000309A                           111  
0000309A  227C 0000101D            112  NHELP   MOVEA.L #INPUT,A1
000030A0  6100 0154                113          BSR     NCHAR
000030A4  7004                     114          MOVE.L  #4,D0
000030A6                           115  
000030A6  B709                     116  PMDSP   CMP.B   (A1)+,(A3)+     ;is command MDSP?
000030A8  56C8 FFFC                117          DBNE    D0,PMDSP        ;check next character
000030AC  6600 000A                118          BNE     NMDSP
000030B0  6100 01F6                119          BSR     MDSP
000030B4  6000 013A                120          BRA     EXITPARSE       ;if all chars matched, exit
000030B8                           121  
000030B8  227C 0000101D            122  NMDSP   MOVEA.L #INPUT,A1
000030BE  6100 0136                123          BSR     NCHAR
000030C2  7005                     124          MOVE.L  #5,D0
000030C4                           125  
000030C4  B709                     126  PSORTW  CMP.B   (A1)+,(A3)+     ;is command SORTW?
000030C6  56C8 FFFC                127          DBNE    D0,PSORTW       ;check next character
000030CA  6600 000A                128          BNE     NSORTW
000030CE  6100 023C                129          BSR     SORTW
000030D2  6000 011C                130          BRA     EXITPARSE       ;if all chars matched, exit
000030D6                           131  
000030D6  227C 0000101D            132  NSORTW  MOVEA.L #INPUT,A1
000030DC  6100 0118                133          BSR     NCHAR
000030E0  7002                     134          MOVE.L  #2,D0
000030E2                           135  
000030E2  B709                     136  PMM     CMP.B   (A1)+,(A3)+     ;is command MM?
000030E4  56C8 FFFC                137          DBNE    D0,PMM          ;check next character
000030E8  6600 000A                138          BNE     NMM
000030EC  6100 0260                139          BSR     MM
000030F0  6000 00FE                140          BRA     EXITPARSE       ;if all chars matched, exit
000030F4                           141  
000030F4  227C 0000101D            142  NMM     MOVEA.L #INPUT,A1
000030FA  6100 00FA                143          BSR     NCHAR
000030FE  7002                     144          MOVE.L  #2,D0
00003100                           145  
00003100  B709                     146  PMS     CMP.B   (A1)+,(A3)+     ;is command MS?
00003102  56C8 FFFC                147          DBNE    D0,PMS          ;check next character
00003106  6600 000A                148          BNE     NMS
0000310A  6100 02DA                149          BSR     MS
0000310E  6000 00E0                150          BRA     EXITPARSE       ;if all chars matched, exit
00003112                           151  
00003112  227C 0000101D            152  NMS     MOVEA.L #INPUT,A1
00003118  6100 00DC                153          BSR     NCHAR
0000311C  7002                     154          MOVE.L  #2,D0
0000311E                           155  
0000311E  B709                     156  PBF     CMP.B   (A1)+,(A3)+     ;is command BF?
00003120  56C8 FFFC                157          DBNE    D0,PBF          ;check next character
00003124  6600 000A                158          BNE     NBF
00003128  6100 02D2                159          BSR     BF
0000312C  6000 00C2                160          BRA     EXITPARSE       ;if all chars matched, exit
00003130                           161  
00003130  227C 0000101D            162  NBF     MOVEA.L #INPUT,A1
00003136  6100 00BE                163          BSR     NCHAR
0000313A  7004                     164          MOVE.L  #4,D0
0000313C                           165  
0000313C  B709                     166  PBMOV   CMP.B   (A1)+,(A3)+     ;is command MOV?
0000313E  56C8 FFFC                167          DBNE    D0,PBMOV        ;check next character
00003142  6600 000A                168          BNE     NBMOV
00003146  6100 02D8                169          BSR     BMOV
0000314A  6000 00A4                170          BRA     EXITPARSE       ;if all chars matched, exit
0000314E                           171  
0000314E  227C 0000101D            172  NBMOV   MOVEA.L #INPUT,A1
00003154  6100 00A0                173          BSR     NCHAR
00003158  7004                     174          MOVE.L  #4,D0
0000315A                           175  
0000315A  B709                     176  PBTST   CMP.B   (A1)+,(A3)+     ;is command BTST?
0000315C  56C8 FFFC                177          DBNE    D0,PBTST        ;check next character
00003160  6600 000A                178          BNE     NBTST
00003164  6100 02E0                179          BSR     BTST
00003168  6000 0086                180          BRA     EXITPARSE       ;if all chars matched, exit
0000316C                           181  
0000316C  227C 0000101D            182  NBTST   MOVEA.L #INPUT,A1
00003172  6100 0082                183          BSR     NCHAR
00003176  7004                     184          MOVE.L  #4,D0
00003178                           185  
00003178  B709                     186  PBSCH   CMP.B   (A1)+,(A3)+     ;is command BSCH?
0000317A  56C8 FFFC                187          DBNE    D0,PBSCH        ;check next character
0000317E  6600 000A                188          BNE     NBSCH
00003182  6100 02C4                189          BSR     BSCH
00003186  6000 0068                190          BRA     EXITPARSE       ;if all chars matched, exit
0000318A                           191  
0000318A  227C 0000101D            192  NBSCH   MOVEA.L #INPUT,A1
00003190  6100 0064                193          BSR     NCHAR
00003194  7002                     194          MOVE.L  #2,D0
00003196                           195  
00003196  B709                     196  PGO     CMP.B   (A1)+,(A3)+     ;is command GO?
00003198  56C8 FFFC                197          DBNE    D0,PGO          ;check next character
0000319C  6600 000A                198          BNE     NGO
000031A0  6100 02A8                199          BSR     GO
000031A4  6000 004A                200          BRA     EXITPARSE       ;if all chars matched, exit
000031A8                           201  
000031A8  227C 0000101D            202  NGO     MOVEA.L #INPUT,A1
000031AE  6100 0046                203          BSR     NCHAR
000031B2  7002                     204          MOVE.L  #2,D0
000031B4                           205  
000031B4  B709                     206  PDF     CMP.B   (A1)+,(A3)+     ;is command DF?
000031B6  56C8 FFFC                207          DBNE    D0,PDF          ;check next character
000031BA  6600 000A                208          BNE     NDF
000031BE  6100 028C                209          BSR     DF
000031C2  6000 002C                210          BRA     EXITPARSE       ;if all chars matched, exit
000031C6                           211  
000031C6  227C 0000101D            212  NDF     MOVEA.L #INPUT,A1
000031CC  6100 0028                213          BSR     NCHAR
000031D0  7004                     214          MOVE.L  #4,D0
000031D2                           215  
000031D2  B709                     216  PEXIT   CMP.B   (A1)+,(A3)+     ;is command EXIT?
000031D4  56C8 FFFC                217          DBNE    D0,PEXIT        ;check next character
000031D8  6600 000A                218          BNE     NEXIT
000031DC  6100 0270                219          BSR     EXIT
000031E0  6000 000E                220          BRA     EXITPARSE       ;if all chars matched, exit
000031E4                           221  
000031E4  227C 0000100D            222  NEXIT   MOVEA.L #INVALID,A1     ;if got here, failed
000031EA  103C 000D                223          MOVE.B  #13,D0
000031EE  4E4F                     224          TRAP    #15
000031F0                           225          
000031F0                           226  EXITPARSE
000031F0  4CDF 0E01                227          MOVEM.L (SP)+,A1/A2/A3/D0 ;restore registers
000031F4  4E75                     228          RTS
000031F6                           229  
000031F6                           230  *-----------------------------------------------------------
000031F6                           231  * Helper function for incrementing between checks
000031F6                           232  *-----------------------------------------------------------
000031F6  227C 0000101D            233  NCHAR   MOVEA.L #INPUT,A1       ;reset A1 to beginning of input string
000031FC  5E8A                     234          ADDA.L  #7,A2           ;increment to get next command string
000031FE  264A                     235          MOVEA.L A2,A3           ;update counter 
00003200  4E75                     236          RTS
00003202                           237  
00003202                           238  *-----------------------------------------------------------
00003202                           239  * HELP
00003202                           240  *-----------------------------------------------------------
00003202  48E7 8040                241  HELP    MOVEM.L D0/A1,-(SP)     ;save registers
00003206                           242  
00003206  227C 000010C1            243          MOVEA.L #HELP1,A1
0000320C  103C 000D                244          MOVE.B #13,D0
00003210  4E4F                     245          TRAP #15
00003212                           246  
00003212  227C 000010E2            247          MOVEA.L #HELP2,A1
00003218  103C 000D                248          MOVE.B #13,D0
0000321C  4E4F                     249          TRAP #15
0000321E                           250  
0000321E  227C 00001140            251          MOVEA.L #HELP2A,A1
00003224  103C 000D                252          MOVE.B #13,D0
00003228  4E4F                     253          TRAP #15
0000322A                           254  
0000322A  227C 00001193            255          MOVEA.L #HELP3,A1
00003230  103C 000D                256          MOVE.B #13,D0
00003234  4E4F                     257          TRAP #15
00003236                           258  
00003236  227C 00001219            259          MOVEA.L #HELP4,A1
0000323C  103C 000D                260          MOVE.B #13,D0
00003240  4E4F                     261          TRAP #15
00003242                           262  
00003242  227C 0000128A            263          MOVEA.L #HELP5,A1
00003248  103C 000D                264          MOVE.B #13,D0
0000324C  4E4F                     265          TRAP #15
0000324E                           266  
0000324E  227C 000012E0            267          MOVEA.L #HELP6,A1
00003254  103C 000D                268          MOVE.B #13,D0
00003258  4E4F                     269          TRAP #15
0000325A                           270  
0000325A  227C 00001350            271          MOVEA.L #HELP7,A1
00003260  103C 000D                272          MOVE.B #13,D0
00003264  4E4F                     273          TRAP #15
00003266                           274  
00003266  227C 000013D1            275          MOVEA.L #HELP8,A1
0000326C  103C 000D                276          MOVE.B #13,D0
00003270  4E4F                     277          TRAP #15
00003272                           278  
00003272  227C 00001426            279          MOVEA.L #HELP9,A1
00003278  103C 000D                280          MOVE.B #13,D0
0000327C  4E4F                     281          TRAP #15
0000327E                           282  
0000327E  227C 00001481            283          MOVEA.L #HELP10,A1
00003284  103C 000D                284          MOVE.B #13,D0
00003288  4E4F                     285          TRAP #15
0000328A                           286  
0000328A  227C 000014AC            287          MOVEA.L #HELP11,A1
00003290  103C 000D                288          MOVE.B #13,D0
00003294  4E4F                     289          TRAP #15
00003296                           290  
00003296  227C 000014CD            291          MOVEA.L #HELP12,A1
0000329C  103C 000D                292          MOVE.B #13,D0
000032A0  4E4F                     293          TRAP #15
000032A2                           294  
000032A2  4CDF 0201                295          MOVEM.L (SP)+,D0/A1     ;restore registers
000032A6  4E75                     296          RTS
000032A8                           297  
000032A8                           298  *-----------------------------------------------------------
000032A8                           299  * MDSP
000032A8                           300  *-----------------------------------------------------------
000032A8  48E7 C030                301  MDSP    MOVEM.L D0/D1/A2/A3,-(SP)
000032AC                           302  
000032AC  6100 01C8                303          BSR ASCII               ;get first argument
000032B0  2441                     304          MOVEA.L D1,A2
000032B2  6100 01C2                305          BSR ASCII               ;get second argument
000032B6  2641                     306          MOVEA.L D1,A3
000032B8                           307  
000032B8  B7FC 00000000            308          CMPA.L #0,A3            ;how many arguments?
000032BE  6600 000A                309          BNE MEMLOOP
000032C2  264A                     310          MOVEA.L A2,A3
000032C4  D7FC 00000010            311          ADDA.L #16,A3           ;if one argument, 16 bytes
000032CA                           312   
000032CA  B7CA                     313  MEMLOOP CMPA.L A2,A3            ;continue while still in range
000032CC  6F00 0038                314          BLE MDSPEXIT
000032D0                           315  
000032D0  220A                     316          MOVE.L A2,D1            ;print address
000032D2  143C 0010                317          MOVE.B #16,D2
000032D6  103C 000F                318          MOVE.B #15,D0
000032DA  4E4F                     319          TRAP #15
000032DC                           320  
000032DC  723A                     321          MOVE.L #$3A,D1          ;print colon
000032DE  103C 0006                322          MOVE.B #6,D0
000032E2  4E4F                     323          TRAP #15
000032E4                           324          
000032E4  221A                     325          MOVE.L (A2)+,D1         ;print value
000032E6  143C 0010                326          MOVE.B #16,D2
000032EA  103C 000F                327          MOVE.B #15,D0
000032EE  4E4F                     328          TRAP #15
000032F0                           329  
000032F0  123C 000D                330          MOVE.B #$D,D1           ;print cr
000032F4  103C 0006                331          MOVE.B #6,D0
000032F8  4E4F                     332          TRAP #15
000032FA  123C 000A                333          MOVE.B #$A,D1           ;print lf
000032FE  103C 0006                334          MOVE.B #6,D0
00003302  4E4F                     335          TRAP #15
00003304                           336  
00003304  60C4                     337          BRA MEMLOOP
00003306                           338  
00003306  4CDF 0C03                339  MDSPEXIT MOVEM.L (SP)+,D0/D1/A2/A3
0000330A  4E75                     340          RTS
0000330C                           341  
0000330C                           342  *-----------------------------------------------------------
0000330C                           343  * SORTW
0000330C                           344  *-----------------------------------------------------------
0000330C  48E7 E038                345  SORTW   MOVEM.L D0/D1/D2/A2/A3/A4,-(SP)
00003310                           346  
00003310  6100 0164                347          BSR ASCII               ;get first argument
00003314  2441                     348          MOVEA.L D1,A2
00003316  6100 015E                349          BSR ASCII               ;get second argument
0000331A  2641                     350          MOVEA.L D1,A3
0000331C  1419                     351          MOVE.B (A1)+,D2         ;get third argument
0000331E                           352  
0000331E  284A                     353          MOVEA.L A2,A4
00003320  244C                     354  SORTLOOP MOVEA.L A4,A2
00003322  B43C 0041                355  BUBBLE  CMP.B #$41,D2           ;is it "A"?
00003326  6E00 000C                356          BGT DSC
0000332A  B54A                     357  ASC     CMP.W (A2)+,(A2)+
0000332C  6300 0014                358          BLS CMPNXT              ;sort ascending
00003330  6000 0008                359          BRA SWAP
00003334  B54A                     360  DSC     CMP.W (A2)+,(A2)+
00003336  6200 000A                361          BHI CMPNXT              ;sort descending
0000333A                           362  
0000333A  2022                     363  SWAP    MOVE.L -(A2),D0
0000333C  4840                     364          SWAP.W D0
0000333E  2480                     365          MOVE.L D0,(A2)
00003340  60DE                     366          BRA SORTLOOP
00003342                           367  
00003342  558A                     368  CMPNXT  SUBA.L #2,A2
00003344  B7CA                     369          CMP.L A2,A3
00003346  6EDA                     370          BGT BUBBLE
00003348                           371  
00003348  4CDF 1C07                372          MOVEM.L (SP)+,D0/D1/D2/A2/A3/A4
0000334C  4E75                     373          RTS
0000334E                           374  
0000334E                           375  *-----------------------------------------------------------
0000334E                           376  * MM
0000334E                           377  *-----------------------------------------------------------
0000334E  48E7 F020                378  MM      MOVEM.L D0/D1/D2/D3/A2,-(SP)
00003352                           379  
00003352  6100 0122                380          BSR ASCII               ;get address argument
00003356  2441                     381          MOVEA.L D1,A2
00003358  1619                     382          MOVE.B (A1)+,D3
0000335A                           383  
0000335A  220A                     384  MMNXT   MOVE.L A2,D1            ;print address
0000335C  143C 0010                385          MOVE.B #16,D2
00003360  103C 000F                386          MOVE.B #15,D0
00003364  4E4F                     387          TRAP #15
00003366                           388  
00003366  723A                     389          MOVE.L #$3A,D1          ;print colon
00003368  103C 0006                390          MOVE.B #6,D0
0000336C  4E4F                     391          TRAP #15
0000336E                           392          
0000336E  4281                     393          CLR.L D1
00003370  B63C 0042                394          CMP.B #$42,D3           ;is it a byte?
00003374  6600 0008                395          BNE MMWORD
00003378  121A                     396          MOVE.B (A2)+,D1
0000337A  6000 0012                397          BRA MMTRAP
0000337E                           398  
0000337E  B63C 0057                399  MMWORD  CMP.B #$57,D3           ;is it a word?
00003382  6600 0008                400          BNE MMLONG
00003386  321A                     401          MOVE.W (A2)+,D1
00003388  6000 0004                402          BRA MMTRAP
0000338C                           403  
0000338C  221A                     404  MMLONG  MOVE.L (A2)+,D1         ;it must be a long
0000338E                           405  
0000338E  143C 0010                406  MMTRAP  MOVE.B #16,D2
00003392  103C 000F                407          MOVE.B #15,D0
00003396  4E4F                     408          TRAP #15
00003398                           409  
00003398  723F                     410          MOVE.L #$3F,D1          ;print ?
0000339A  103C 0006                411          MOVE.B #6,D0
0000339E  4E4F                     412          TRAP #15
000033A0                           413  
000033A0  227C 0000101D            414          MOVEA.L #INPUT,A1
000033A6  103C 0002                415          MOVE.B  #2,D0
000033AA  4E4F                     416          TRAP    #15             ;read value
000033AC                           417  
000033AC  0C11 002E                418          CMP.B #$2E,(A1)         ;quit on . entered
000033B0  6700 002E                419          BEQ EXMM
000033B4                           420  
000033B4  4A01                     421          TST.B D1
000033B6  67A2                     422          BEQ MMNXT
000033B8                           423          
000033B8  6100 00BC                424          BSR ASCII               ;convert value to hex
000033BC                           425  
000033BC  B63C 0042                426          CMP.B #$42,D3           ;is it a byte?
000033C0  6600 0008                427          BNE MMWORD2
000033C4  1501                     428          MOVE.B D1,-(A2)
000033C6  528A                     429          ADDA.L #1,A2
000033C8  6090                     430          BRA MMNXT
000033CA                           431  
000033CA  B63C 0057                432  MMWORD2 CMP.B #$57,D3           ;is it a word?
000033CE  6600 0008                433          BNE MMLONG2
000033D2  3501                     434          MOVE.W D1,-(A2)
000033D4  548A                     435          ADDA.L #2,A2
000033D6  6082                     436          BRA MMNXT
000033D8                           437  
000033D8  2501                     438  MMLONG2 MOVE.L D1,-(A2)         ;it must be a long
000033DA  588A                     439          ADDA.L #4,A2
000033DC                           440          
000033DC  6000 FF7C                441          BRA MMNXT
000033E0                           442  
000033E0  4CDF 040F                443  EXMM    MOVEM.L (SP)+,D0/D1/D2/D3/A2
000033E4  4E75                     444          RTS
000033E6                           445  
000033E6                           446  *-----------------------------------------------------------
000033E6                           447  * MS
000033E6                           448  *-----------------------------------------------------------
000033E6  48E7 4020                449  MS      MOVEM.L D1/A2,-(SP)
000033EA                           450  
000033EA  6100 008A                451          BSR ASCII               ;read address argument
000033EE  2441                     452          MOVEA.L D1,A2
000033F0  6100 0084                453          BSR ASCII               ;read data argument
000033F4                           454  
000033F4  3481                     455          MOVE.W D1,(A2)          ;write data to memory
000033F6                           456  
000033F6  4CDF 0402                457          MOVEM.L (SP)+,D1/A2
000033FA  4E75                     458          RTS
000033FC                           459  
000033FC                           460  *-----------------------------------------------------------
000033FC                           461  * BF
000033FC                           462  *-----------------------------------------------------------
000033FC  48E7 4030                463  BF      MOVEM.L D1/A2/A3,-(SP)
00003400                           464  
00003400  6100 0074                465          BSR ASCII               ;read start address
00003404  2441                     466          MOVEA.L D1,A2
00003406  6100 006E                467          BSR ASCII               ;read end address
0000340A  2641                     468          MOVEA.L D1,A3
0000340C  6100 0068                469          BSR ASCII               ;read data
00003410                           470  
00003410  B7CA                     471  BFLOOP  CMP.L A2,A3
00003412  6D00 0006                472          BLT EXBF
00003416  34C1                     473          MOVE.W D1,(A2)+         ;write to memory
00003418  60F6                     474          BRA BFLOOP
0000341A                           475  
0000341A  4CDF 0C02                476  EXBF    MOVEM.L (SP)+,D1/A2/A3
0000341E  4E75                     477          RTS
00003420                           478  
00003420                           479  *-----------------------------------------------------------
00003420                           480  * BMOV
00003420                           481  *-----------------------------------------------------------
00003420  48E7 4038                482  BMOV    MOVEM.L D1/A2/A3/A4,-(SP)
00003424                           483  
00003424  6100 0050                484          BSR ASCII               ;read original start address
00003428  2441                     485          MOVEA.L D1,A2
0000342A  6100 004A                486          BSR ASCII               ;read origina end address
0000342E  2641                     487          MOVEA.L D1,A3
00003430  6100 0044                488          BSR ASCII               ;read new start address
00003434  2841                     489          MOVEA.L D1,A4
00003436                           490  
00003436  B7CA                     491  BMOVLOOP CMP.L A2,A3
00003438  6D00 0006                492          BLT EXBMOV
0000343C  38DA                     493          MOVE.W (A2)+,(A4)+      ;copy memory to new loc
0000343E  60F6                     494          BRA BMOVLOOP
00003440                           495  
00003440  4CDF 1C02                496  EXBMOV  MOVEM.L (SP)+,D1/A2/A3/A4
00003444  4E75                     497          RTS
00003446                           498  
00003446                           499  *-----------------------------------------------------------
00003446                           500  * BTST
00003446                           501  *-----------------------------------------------------------
00003446  4E75                     502  BTST    RTS
00003448                           503  
00003448                           504  *-----------------------------------------------------------
00003448                           505  * BSCH
00003448                           506  *-----------------------------------------------------------
00003448  4E75                     507  BSCH    RTS
0000344A                           508  
0000344A                           509  *-----------------------------------------------------------
0000344A                           510  * GO
0000344A                           511  *-----------------------------------------------------------
0000344A                           512  GO      
0000344A  4E75                     513          RTS
0000344C                           514  
0000344C                           515  *-----------------------------------------------------------
0000344C                           516  * DF
0000344C                           517  *-----------------------------------------------------------
0000344C  4E75                     518  DF      RTS
0000344E                           519  
0000344E                           520  *-----------------------------------------------------------
0000344E                           521  * EXIT
0000344E                           522  *-----------------------------------------------------------
0000344E  4E75                     523  EXIT    RTS
00003450                           524  
00003450                           525  *-----------------------------------------------------------
00003450                           526  * Bus error exception
00003450                           527  *-----------------------------------------------------------
00003450  4E73                     528  BUS     RTE
00003452                           529  
00003452                           530  *-----------------------------------------------------------
00003452                           531  * Address error exception
00003452                           532  *-----------------------------------------------------------
00003452  4E73                     533  ADDR    RTE
00003454                           534  
00003454                           535  *-----------------------------------------------------------
00003454                           536  * Illegal instruction exception
00003454                           537  *-----------------------------------------------------------
00003454  4E73                     538  ILLI    RTE
00003456                           539  
00003456                           540  *-----------------------------------------------------------
00003456                           541  * Privilege violation exception
00003456                           542  *-----------------------------------------------------------
00003456  4E73                     543  PRIV    RTE
00003458                           544  
00003458                           545  *-----------------------------------------------------------
00003458                           546  * Divide by zero exception
00003458                           547  *-----------------------------------------------------------
00003458  4E73                     548  DIV0    RTE
0000345A                           549  
0000345A                           550  *-----------------------------------------------------------
0000345A                           551  * Check instruction exception
0000345A                           552  *-----------------------------------------------------------
0000345A  4E73                     553  CHK     RTE
0000345C                           554  
0000345C                           555  *-----------------------------------------------------------
0000345C                           556  * Line A emulator exception
0000345C                           557  *-----------------------------------------------------------
0000345C  4E73                     558  LNEA    RTE
0000345E                           559  
0000345E                           560  *-----------------------------------------------------------
0000345E                           561  * Line F emulator exception
0000345E                           562  *-----------------------------------------------------------
0000345E  4E73                     563  LNEF    RTE
00003460                           564  
00003460                           565  *-----------------------------------------------------------
00003460                           566  * DIGIT: convert single ascii digit to hex
00003460                           567  * Input: single ascii character in register D0
00003460                           568  * Output: hex value in register D0
00003460                           569  *-----------------------------------------------------------
00003460  B03C 0040                570  DIGIT   CMP.B #$40,D0
00003464  6E00 000A                571          BGT HIGHER
00003468  0400 0030                572          SUBI.B #$30,D0
0000346C  6000 0006                573          BRA EXITDIGIT
00003470  0400 0037                574  HIGHER  SUBI.B #$37,D0
00003474  4E75                     575  EXITDIGIT RTS
00003476                           576  
00003476                           577  *-----------------------------------------------------------
00003476                           578  * ASCII: convert ascii to hex
00003476                           579  * Input: pointer to start of string in A1
00003476                           580  * Output: hex value in register D1
00003476                           581  *-----------------------------------------------------------
00003476  48E7 8000                582  ASCII   MOVEM.L D0,-(SP)        ;save registers
0000347A  4280                     583          CLR.L D0                ;clear for digit manipulation
0000347C  4281                     584          CLR.L D1                ;clear for sum
0000347E                           585  
0000347E  1019                     586  CHAR    MOVE.B (A1)+,D0         ;move digit
00003480  4A00                     587          TST.B D0                ;continue until end of string
00003482  6700 0014                588          BEQ EXITASCII
00003486  B03C 0020                589          CMP.B #$20,D0           ;continue until empty space
0000348A  6700 000C                590          BEQ EXITASCII
0000348E                           591  
0000348E  61D0                     592          BSR DIGIT
00003490                           593  
00003490  C3FC 0010                594          MULS.W #$10,D1          ;multiply by 10
00003494  D280                     595          ADD.L D0,D1             ;add digit (Horner)
00003496                           596  
00003496  60E6                     597          BRA CHAR
00003498                           598  
00003498  4CDF 0001                599  EXITASCII MOVEM.L (SP)+,D0      ;restore registers
0000349C  4E75                     600          RTS
0000349E                           601  
0000349E                           602          END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDR                3452
ASC                 332A
ASCII               3476
BF                  33FC
BFLOOP              3410
BMOV                3420
BMOVLOOP            3436
BSCH                3448
BTST                3446
BUBBLE              3322
BUS                 3450
CHAR                347E
CHK                 345A
CMPNXT              3342
COMP_TBL            106D
DF                  344C
DIGIT               3460
DIV0                3458
DSC                 3334
EXBF                341A
EXBMOV              3440
EXIT                344E
EXITASCII           3498
EXITDIGIT           3474
EXITMAIN            302C
EXITPARSE           31F0
EXMM                33E0
GO                  344A
HELP                3202
HELP1               10C1
HELP10              1481
HELP11              14AC
HELP12              14CD
HELP2               10E2
HELP2A              1140
HELP3               1193
HELP4               1219
HELP5               128A
HELP6               12E0
HELP7               1350
HELP8               13D1
HELP9               1426
HIGHER              3470
ILLI                3454
INPUT               101D
INVALID             100D
LNEA                345C
LNEF                345E
MAIN                300E
MDSP                32A8
MDSPEXIT            3306
MEMLOOP             32CA
MM                  334E
MMLONG              338C
MMLONG2             33D8
MMNXT               335A
MMTRAP              338E
MMWORD              337E
MMWORD2             33CA
MS                  33E6
NBF                 3130
NBMOV               314E
NBSCH               318A
NBTST               316C
NCHAR               31F6
NDF                 31C6
NEXIT               31E4
NGO                 31A8
NHELP               309A
NMDSP               30B8
NMM                 30F4
NMS                 3112
NSORTW              30D6
PARSE               3070
PBF                 311E
PBMOV               313C
PBSCH               3178
PBTST               315A
PDF                 31B4
PEXIT               31D2
PGO                 3196
PHELP               3088
PMDSP               30A6
PMM                 30E2
PMS                 3100
PRIV                3456
PROMPT              1000
PSORTW              30C4
SETUP               302E
SORTLOOP            3320
SORTW               330C
START               3000
SWAP                333A
