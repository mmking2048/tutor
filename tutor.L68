00003000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 11/6/2018 9:52:33 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : ECE 441 Design Project
00000000                             3  * Written by : Michelle Yang
00000000                             4  * Date       : 11/9/2018
00000000                             5  * Description: Simple operating system for Easy 68K
00000000                             6  *-----------------------------------------------------------
00000000                             7  *-----------------------------------------------------------
00000000                             8  * Data segment
00000000                             9  *-----------------------------------------------------------
00001000                            10          ORG     $1000
00001000                            11          
00001000= 4D 4F 4E 49 54 4F ...     12  PROMPT  DC.B    'MONITOR441> ',0 ;prompt
0000100D= 49 4E 56 41 4C 49 ...     13  INVALID DC.B    'INVALID COMMAND',0
0000101D                            14  
0000101D                            15  INPUT   DS.B    80              ;buffer for commands
0000106D                            16  
0000106D                            17  COMP_TBL                        ;table of all commands
0000106D= 48 45 4C 50 00            18          DC.B    'HELP',0
00001072                            19          DS.B    1               ;padding so table is aligned at 6 bytes
00001073= 4D 44 53 50 00            20          DC.B    'MDSP',0
00001078                            21          DS.B    1
00001079= 53 4F 52 54 57 00         22          DC.B    'SORTW',0
0000107F= 4D 4D 00                  23          DC.B    'MM',0
00001082                            24          DS.B    3
00001085= 4D 53 00                  25          DC.B    'MS',0
00001088                            26          DS.B    3
0000108B= 42 46 00                  27          DC.B    'BF',0
0000108E                            28          DS.B    3
00001091= 42 4D 4F 56 00            29          DC.B    'BMOV',0
00001096                            30          DS.B    1
00001097= 42 54 53 54 00            31          DC.B    'BTST',0
0000109C                            32          DS.B    1
0000109D= 42 53 43 48 00            33          DC.B    'BSCH',0
000010A2                            34          DS.B    1
000010A3= 47 4F 00                  35          DC.B    'GO',0
000010A6                            36          DS.B    3
000010A9= 44 46 00                  37          DC.B    'DF',0
000010AC                            38          DS.B    3
000010AF= 45 58 49 54 00            39          DC.B    'EXIT',0
000010B4                            40          DS.B    1
000010B5                            41  
000010B5= 48 45 4C 50 3A 20 ...     42  HELP1   DC.B    'HELP: displays this help message',0
000010D6= 4D 44 53 50 20 3C ...     43  HELP2   DC.B    'MDSP <address1> <address2>: outputs address and memory contents from <address1> to <address2>',0
00001134= 4D 44 53 50 20 3C ...     44  HELP2A  DC.B    'MDSP <address1>: outputs address and memory from <address1> to <address + 16 bytes',0
00001187= 53 4F 52 54 57 20 ...     45  HELP3   DC.B    'SORTW <address1> <address2> <order>: sort block of memory between <address1> and <address2>, in ascending (A) or descending (D) order',0
0000120D= 4D 4D 20 3C 61 64 ...     46  HELP4   DC.B    'MM <address> <size>: display memory and modify/enter new data, showing byte (B), word (W), or longword (L) bytes',0
0000127E= 4D 53 20 3C 61 64 ...     47  HELP5   DC.B    'MS <address> <data>: set memory at <address> to <data>, which is of type ASCII or hex',0
000012D4= 42 46 20 3C 61 64 ...     48  HELP6   DC.B    'BF <address1> <address2> <data>: fills memory between <address1> and <address2> with <data>, which is word size',0
00001344= 42 4D 4F 56 20 3C ...     49  HELP7   DC.B    'BMOV <address1> <address2> <address3>: move block of memory between <address1> and <address2> to location starting at <address3>',0
000013C5= 42 54 53 54 20 3C ...     50  HELP8   DC.B    'BTST <address1> <address2>: test a block of memory between <address1> and <address2>',0
0000141A= 42 53 43 48 20 3C ...     51  HELP9   DC.B    'BSCH <address1> <address2> <string>: search for <string> between <address1> and <address2>',0
00001475= 47 4F 20 3C 61 64 ...     52  HELP10  DC.B    'GO <address>: execute program at <address>',0
000014A0= 44 46 3A 20 64 69 ...     53  HELP11  DC.B    'DF: display registers and values',0
000014C1= 45 58 49 54 3A 20 ...     54  HELP12  DC.B    'EXIT: terminate the program',0
000014DD                            55  
000014DD                            56  *-----------------------------------------------------------
000014DD                            57  * Program segment
000014DD                            58  *-----------------------------------------------------------        
00003000                            59          ORG     $3000
00003000                            60  *Start here: set up and call to main        
00003000  6100 002C                 61  START   BSR     SETUP           ;set up here
00003004  6100 0008                 62          BSR     MAIN            ;call main
00003008                            63          
00003008  103C 0009                 64          MOVE.B  #9,D0           ;exit program
0000300C  4E4F                      65          TRAP    #15
0000300E                            66          
0000300E                            67  * Main method
0000300E  227C 00001000             68  MAIN    MOVEA.L #PROMPT,A1
00003014  103C 000E                 69          MOVE.B  #14,D0
00003018  4E4F                      70          TRAP    #15             ;print prompt
0000301A                            71          
0000301A  227C 0000101D             72          MOVEA.L #INPUT,A1
00003020  103C 0002                 73          MOVE.B  #2,D0
00003024  4E4F                      74          TRAP    #15             ;read command
00003026                            75  
00003026  6100 0048                 76          BSR     PARSE
0000302A                            77          
0000302A  60E2                      78          BRA     MAIN            ;get next command
0000302C                            79          
0000302C  4E75                      80  EXITMAIN RTS
0000302E                            81  
0000302E                            82  *-----------------------------------------------------------
0000302E                            83  * Setup exception handler
0000302E                            84  *-----------------------------------------------------------
0000302E  21F9 0000327C 0008        85  SETUP   MOVE.L  BUS,$008
00003036  21F9 0000327E 000C        86          MOVE.L  ADDR,$00C
0000303E  21F9 00003280 0010        87          MOVE.L  ILLI,$010
00003046  21F9 00003284 0014        88          MOVE.L  DIV0,$014
0000304E  21F9 00003286 0018        89          MOVE.L  CHK,$018
00003056  21F9 00003282 0020        90          MOVE.L  PRIV,$020
0000305E  21F9 00003288 0028        91          MOVE.L  LNEA,$028
00003066  21F9 0000328A 002C        92          MOVE.L  LNEF,$02C
0000306E  4E75                      93          RTS
00003070                            94  
00003070                            95  *-----------------------------------------------------------
00003070                            96  * Parse commands
00003070                            97  *-----------------------------------------------------------
00003070  48E7 8070                 98  PARSE   MOVEM.L A1/A2/A3/D0,-(SP)     ;save registers
00003074  227C 0000101D             99          MOVEA.L #INPUT,A1       ;get front of string
0000307A                           100          
0000307A  247C 0000106D            101          MOVEA.L #COMP_TBL,A2    ;get item in command string table
00003080  267C 0000106D            102          MOVEA.L #COMP_TBL,A3
00003086                           103          
00003086  7004                     104          MOVE.L  #4,D0            ;set D0 to number of chars to check
00003088                           105  
00003088  B709                     106  PHELP   CMP.B   (A1)+,(A3)+
0000308A  56C8 FFFC                107          DBNE    D0,PHELP        ;check next character
0000308E  6600 000A                108          BNE     NHELP           ;if did not match, check next string
00003092  6100 012C                109          BSR     HELP
00003096  6000 0116                110          BRA     EXITPARSE
0000309A                           111  
0000309A  6100 0118                112  NHELP   BSR     NCHAR
0000309E  7004                     113          MOVE.L  #4,D0
000030A0                           114  
000030A0  B709                     115  PMDSP   CMP.B   (A1)+,(A3)+
000030A2  56C8 FFFC                116          DBNE    D0,PMDSP        ;check next character
000030A6  6600 000A                117          BNE     NMDSP
000030AA  6100 01BA                118          BSR     MDSP
000030AE  6000 00FE                119          BRA     EXITPARSE       ;if all chars matched, exit
000030B2                           120  
000030B2  6100 0100                121  NMDSP   BSR     NCHAR
000030B6  7005                     122          MOVE.L  #5,D0
000030B8                           123  
000030B8  B709                     124  PSORTW  CMP.B   (A1)+,(A3)+
000030BA  56C8 FFFC                125          DBNE    D0,PSORTW       ;check next character
000030BE  6600 000A                126          BNE     NSORTW
000030C2  6100 01A4                127          BSR     SORTW
000030C6  6000 00E6                128          BRA     EXITPARSE       ;if all chars matched, exit
000030CA                           129  
000030CA  6100 00E8                130  NSORTW  BSR     NCHAR
000030CE  7002                     131          MOVE.L  #2,D0
000030D0                           132  
000030D0  B709                     133  PMM     CMP.B   (A1)+,(A3)+
000030D2  56C8 FFFC                134          DBNE    D0,PMM          ;check next character
000030D6  6600 000A                135          BNE     NMM
000030DA  6100 018E                136          BSR     MM
000030DE  6000 00CE                137          BRA     EXITPARSE       ;if all chars matched, exit
000030E2                           138  
000030E2  6100 00D0                139  NMM     BSR     NCHAR
000030E6  7002                     140          MOVE.L  #2,D0
000030E8                           141  
000030E8  B709                     142  PMS     CMP.B   (A1)+,(A3)+
000030EA  56C8 FFFC                143          DBNE    D0,PMS          ;check next character
000030EE  6600 000A                144          BNE     NMS
000030F2  6100 0178                145          BSR     MS
000030F6  6000 00B6                146          BRA     EXITPARSE       ;if all chars matched, exit
000030FA                           147  
000030FA  6100 00B8                148  NMS     BSR     NCHAR
000030FE  7002                     149          MOVE.L  #2,D0
00003100                           150  
00003100  B709                     151  PBF     CMP.B   (A1)+,(A3)+
00003102  56C8 FFFC                152          DBNE    D0,PBF          ;check next character
00003106  6600 000A                153          BNE     NBF
0000310A  6100 0162                154          BSR     BF
0000310E  6000 009E                155          BRA     EXITPARSE       ;if all chars matched, exit
00003112                           156  
00003112  6100 00A0                157  NBF     BSR     NCHAR
00003116  7004                     158          MOVE.L  #4,D0
00003118                           159  
00003118  B709                     160  PBMOV   CMP.B   (A1)+,(A3)+
0000311A  56C8 FFFC                161          DBNE    D0,PBMOV        ;check next character
0000311E  6600 000A                162          BNE     NBMOV
00003122  6100 014C                163          BSR     BMOV
00003126  6000 0086                164          BRA     EXITPARSE       ;if all chars matched, exit
0000312A                           165  
0000312A  6100 0088                166  NBMOV   BSR     NCHAR
0000312E  7004                     167          MOVE.L  #4,D0
00003130                           168  
00003130  B709                     169  PBTST   CMP.B   (A1)+,(A3)+
00003132  56C8 FFFC                170          DBNE    D0,PBTST        ;check next character
00003136  6600 000A                171          BNE     NBTST
0000313A  6100 0136                172          BSR     BTST
0000313E  6000 006E                173          BRA     EXITPARSE       ;if all chars matched, exit
00003142                           174  
00003142  6100 0070                175  NBTST   BSR     NCHAR
00003146  7004                     176          MOVE.L  #4,D0
00003148                           177  
00003148  B709                     178  PBSCH   CMP.B   (A1)+,(A3)+
0000314A  56C8 FFFC                179          DBNE    D0,PBSCH        ;check next character
0000314E  6600 000A                180          BNE     NBSCH
00003152  6100 0120                181          BSR     BSCH
00003156  6000 0056                182          BRA     EXITPARSE       ;if all chars matched, exit
0000315A                           183  
0000315A  6100 0058                184  NBSCH   BSR     NCHAR
0000315E  7002                     185          MOVE.L  #2,D0
00003160                           186  
00003160  B709                     187  PGO     CMP.B   (A1)+,(A3)+
00003162  56C8 FFFC                188          DBNE    D0,PGO          ;check next character
00003166  6600 000A                189          BNE     NGO
0000316A  6100 010A                190          BSR     GO
0000316E  6000 003E                191          BRA     EXITPARSE       ;if all chars matched, exit
00003172                           192  
00003172  6100 0040                193  NGO     BSR     NCHAR
00003176  7002                     194          MOVE.L  #2,D0
00003178                           195  
00003178  B709                     196  PDF     CMP.B   (A1)+,(A3)+
0000317A  56C8 FFFC                197          DBNE    D0,PDF          ;check next character
0000317E  6600 000A                198          BNE     NDF
00003182  6100 00F4                199          BSR     DF
00003186  6000 0026                200          BRA     EXITPARSE       ;if all chars matched, exit
0000318A                           201  
0000318A  6100 0028                202  NDF     BSR     NCHAR
0000318E  7004                     203          MOVE.L  #4,D0
00003190                           204  
00003190  B709                     205  PEXIT   CMP.B   (A1)+,(A3)+
00003192  56C8 FFFC                206          DBNE    D0,PEXIT         ;check next character
00003196  6600 000A                207          BNE     NEXIT
0000319A  6100 00DE                208          BSR     EXIT
0000319E  6000 000E                209          BRA     EXITPARSE        ;if all chars matched, exit
000031A2                           210  
000031A2  227C 0000100D            211  NEXIT   MOVEA.L #INVALID,A1      ;if got here, failed
000031A8  103C 000D                212          MOVE.B  #13,D0
000031AC  4E4F                     213          TRAP    #15
000031AE                           214          
000031AE                           215  EXITPARSE
000031AE  4CDF 0E01                216          MOVEM.L (SP)+,A1/A2/A3/D0 ;restore registers
000031B2  4E75                     217          RTS
000031B4                           218  
000031B4                           219  *-----------------------------------------------------------
000031B4                           220  * Helper function for incrementing between checks
000031B4                           221  *-----------------------------------------------------------
000031B4  227C 0000101D            222  NCHAR   MOVEA.L #INPUT,A1       ;reset A1 to beginning of input string
000031BA  5C8A                     223          ADDA.L  #6,A2           ;increment to get next command string
000031BC  264A                     224          MOVEA.L A2,A3           ;update counter 
000031BE  4E75                     225          RTS
000031C0                           226  
000031C0                           227  *-----------------------------------------------------------
000031C0                           228  * HELP
000031C0                           229  *-----------------------------------------------------------
000031C0  48E7 8040                230  HELP    MOVEM.L D0/A1,-(SP)     ;save registers
000031C4                           231  
000031C4  227C 000010B5            232          MOVEA.L #HELP1,A1
000031CA  103C 000D                233          MOVE.B #13,D0
000031CE  4E4F                     234          TRAP #15
000031D0                           235  
000031D0  227C 000010D6            236          MOVEA.L #HELP2,A1
000031D6  103C 000D                237          MOVE.B #13,D0
000031DA  4E4F                     238          TRAP #15
000031DC                           239  
000031DC  227C 00001134            240          MOVEA.L #HELP2A,A1
000031E2  103C 000D                241          MOVE.B #13,D0
000031E6  4E4F                     242          TRAP #15
000031E8                           243  
000031E8  227C 00001187            244          MOVEA.L #HELP3,A1
000031EE  103C 000D                245          MOVE.B #13,D0
000031F2  4E4F                     246          TRAP #15
000031F4                           247  
000031F4  227C 0000120D            248          MOVEA.L #HELP4,A1
000031FA  103C 000D                249          MOVE.B #13,D0
000031FE  4E4F                     250          TRAP #15
00003200                           251  
00003200  227C 0000127E            252          MOVEA.L #HELP5,A1
00003206  103C 000D                253          MOVE.B #13,D0
0000320A  4E4F                     254          TRAP #15
0000320C                           255  
0000320C  227C 000012D4            256          MOVEA.L #HELP6,A1
00003212  103C 000D                257          MOVE.B #13,D0
00003216  4E4F                     258          TRAP #15
00003218                           259  
00003218  227C 00001344            260          MOVEA.L #HELP7,A1
0000321E  103C 000D                261          MOVE.B #13,D0
00003222  4E4F                     262          TRAP #15
00003224                           263  
00003224  227C 000013C5            264          MOVEA.L #HELP8,A1
0000322A  103C 000D                265          MOVE.B #13,D0
0000322E  4E4F                     266          TRAP #15
00003230                           267  
00003230  227C 0000141A            268          MOVEA.L #HELP9,A1
00003236  103C 000D                269          MOVE.B #13,D0
0000323A  4E4F                     270          TRAP #15
0000323C                           271  
0000323C  227C 00001475            272          MOVEA.L #HELP10,A1
00003242  103C 000D                273          MOVE.B #13,D0
00003246  4E4F                     274          TRAP #15
00003248                           275  
00003248  227C 000014A0            276          MOVEA.L #HELP11,A1
0000324E  103C 000D                277          MOVE.B #13,D0
00003252  4E4F                     278          TRAP #15
00003254                           279  
00003254  227C 000014C1            280          MOVEA.L #HELP12,A1
0000325A  103C 000D                281          MOVE.B #13,D0
0000325E  4E4F                     282          TRAP #15
00003260                           283  
00003260  4CDF 0201                284          MOVEM.L (SP)+,D0/A1     ;restore registers
00003264  4E75                     285          RTS
00003266                           286  
00003266                           287  *-----------------------------------------------------------
00003266                           288  * MDSP
00003266                           289  *-----------------------------------------------------------
00003266  4E75                     290  MDSP    RTS
00003268                           291  
00003268                           292  *-----------------------------------------------------------
00003268                           293  * SORTW
00003268                           294  *-----------------------------------------------------------
00003268  4E75                     295  SORTW   RTS
0000326A                           296  
0000326A                           297  *-----------------------------------------------------------
0000326A                           298  * MM
0000326A                           299  *-----------------------------------------------------------
0000326A  4E75                     300  MM      RTS
0000326C                           301  
0000326C                           302  *-----------------------------------------------------------
0000326C                           303  * MS
0000326C                           304  *-----------------------------------------------------------
0000326C  4E75                     305  MS      RTS
0000326E                           306  
0000326E                           307  *-----------------------------------------------------------
0000326E                           308  * BF
0000326E                           309  *-----------------------------------------------------------
0000326E  4E75                     310  BF      RTS
00003270                           311  
00003270                           312  *-----------------------------------------------------------
00003270                           313  * BMOV
00003270                           314  *-----------------------------------------------------------
00003270  4E75                     315  BMOV    RTS
00003272                           316  
00003272                           317  *-----------------------------------------------------------
00003272                           318  * BTST
00003272                           319  *-----------------------------------------------------------
00003272  4E75                     320  BTST    RTS
00003274                           321  
00003274                           322  *-----------------------------------------------------------
00003274                           323  * BSCH
00003274                           324  *-----------------------------------------------------------
00003274  4E75                     325  BSCH    RTS
00003276                           326  
00003276                           327  *-----------------------------------------------------------
00003276                           328  * GO
00003276                           329  *-----------------------------------------------------------
00003276  4E75                     330  GO      RTS
00003278                           331  
00003278                           332  *-----------------------------------------------------------
00003278                           333  * DF
00003278                           334  *-----------------------------------------------------------
00003278  4E75                     335  DF      RTS
0000327A                           336  
0000327A                           337  *-----------------------------------------------------------
0000327A                           338  * EXIT
0000327A                           339  *-----------------------------------------------------------
0000327A  4E75                     340  EXIT    RTS
0000327C                           341  
0000327C                           342  *-----------------------------------------------------------
0000327C                           343  * Bus error exception
0000327C                           344  *-----------------------------------------------------------
0000327C  4E73                     345  BUS     RTE
0000327E                           346  
0000327E                           347  *-----------------------------------------------------------
0000327E                           348  * Address error exception
0000327E                           349  *-----------------------------------------------------------
0000327E  4E73                     350  ADDR    RTE
00003280                           351  
00003280                           352  *-----------------------------------------------------------
00003280                           353  * Illegal instruction exception
00003280                           354  *-----------------------------------------------------------
00003280  4E73                     355  ILLI    RTE
00003282                           356  
00003282                           357  *-----------------------------------------------------------
00003282                           358  * Privilege violation exception
00003282                           359  *-----------------------------------------------------------
00003282  4E73                     360  PRIV    RTE
00003284                           361  
00003284                           362  *-----------------------------------------------------------
00003284                           363  * Divide by zero exception
00003284                           364  *-----------------------------------------------------------
00003284  4E73                     365  DIV0    RTE
00003286                           366  
00003286                           367  *-----------------------------------------------------------
00003286                           368  * Check instruction exception
00003286                           369  *-----------------------------------------------------------
00003286  4E73                     370  CHK     RTE
00003288                           371  
00003288                           372  *-----------------------------------------------------------
00003288                           373  * Line A emulator exception
00003288                           374  *-----------------------------------------------------------
00003288  4E73                     375  LNEA    RTE
0000328A                           376  
0000328A                           377  *-----------------------------------------------------------
0000328A                           378  * Line F emulator exception
0000328A                           379  *-----------------------------------------------------------
0000328A  4E73                     380  LNEF    RTE
0000328C                           381  
0000328C                           382          END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDR                327E
BF                  326E
BMOV                3270
BSCH                3274
BTST                3272
BUS                 327C
CHK                 3286
COMP_TBL            106D
DF                  3278
DIV0                3284
EXIT                327A
EXITMAIN            302C
EXITPARSE           31AE
GO                  3276
HELP                31C0
HELP1               10B5
HELP10              1475
HELP11              14A0
HELP12              14C1
HELP2               10D6
HELP2A              1134
HELP3               1187
HELP4               120D
HELP5               127E
HELP6               12D4
HELP7               1344
HELP8               13C5
HELP9               141A
ILLI                3280
INPUT               101D
INVALID             100D
LNEA                3288
LNEF                328A
MAIN                300E
MDSP                3266
MM                  326A
MS                  326C
NBF                 3112
NBMOV               312A
NBSCH               315A
NBTST               3142
NCHAR               31B4
NDF                 318A
NEXIT               31A2
NGO                 3172
NHELP               309A
NMDSP               30B2
NMM                 30E2
NMS                 30FA
NSORTW              30CA
PARSE               3070
PBF                 3100
PBMOV               3118
PBSCH               3148
PBTST               3130
PDF                 3178
PEXIT               3190
PGO                 3160
PHELP               3088
PMDSP               30A0
PMM                 30D0
PMS                 30E8
PRIV                3282
PROMPT              1000
PSORTW              30B8
SETUP               302E
SORTW               3268
START               3000
