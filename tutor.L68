00003000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 11/23/2018 6:15:28 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : ECE 441 Design Project
00000000                             3  * Written by : Michelle Yang
00000000                             4  * Date       : 11/9/2018
00000000                             5  * Description: Simple operating system for Easy 68K
00000000                             6  *-----------------------------------------------------------
00000000                             7  *-----------------------------------------------------------
00000000                             8  * Data segment
00000000                             9  *-----------------------------------------------------------
00001000                            10          ORG     $1000
00001000                            11          
00001000= 4D 4F 4E 49 54 4F ...     12  PROMPT  DC.B    'MONITOR441> ',0 ;prompt
0000100D= 49 4E 56 41 4C 49 ...     13  INVALID DC.B    'INVALID COMMAND',0
0000101D                            14  
0000101D                            15  INPUT   DS.B    80              ;buffer for commands
0000106D                            16  
0000106D                            17  COMP_TBL                        ;table of all commands
0000106D= 48 45 4C 50 00            18          DC.B    'HELP',0
00001072                            19          DS.B    2               ;padding so table is aligned at 6 bytes
00001074= 4D 44 53 50 20 00         20          DC.B    'MDSP ',0
0000107A                            21          DS.B    1
0000107B= 53 4F 52 54 57 20 00      22          DC.B    'SORTW ',0
00001082= 4D 4D 20 00               23          DC.B    'MM ',0
00001086                            24          DS.B    3
00001089= 4D 53 20 00               25          DC.B    'MS ',0
0000108D                            26          DS.B    3
00001090= 42 46 20 00               27          DC.B    'BF ',0
00001094                            28          DS.B    3
00001097= 42 4D 4F 56 20 00         29          DC.B    'BMOV ',0
0000109D                            30          DS.B    1
0000109E= 42 54 53 54 20 00         31          DC.B    'BTST ',0
000010A4                            32          DS.B    1
000010A5= 42 53 43 48 20 00         33          DC.B    'BSCH ',0
000010AB                            34          DS.B    1
000010AC= 47 4F 20 00               35          DC.B    'GO ',0
000010B0                            36          DS.B    3
000010B3= 44 46 00                  37          DC.B    'DF',0
000010B6                            38          DS.B    4
000010BA= 45 43 48 4F 20 00         39          DC.B    'ECHO ',0
000010C0                            40          DS.B    1
000010C1= 45 58 49 54 00            41          DC.B    'EXIT',0
000010C6                            42          DS.B    2
000010C8                            43  
000010C8= 50 43 3D 00               44  REGPC   DC.B    'PC=',0
000010CC= 53 52 3D 00               45  REGSR   DC.B    'SR=',0
000010D0= 55 53 3D 00               46  REGUS   DC.B    'US=',0
000010D4= 53 53 3D 00               47  REGSS   DC.B    'SS=',0
000010D8= 44 30 3D 00               48  REGD0   DC.B    'D0=',0
000010DC= 44 31 3D 00               49  REGD1   DC.B    'D1=',0
000010E0= 44 32 3D 00               50  REGD2   DC.B    'D2=',0
000010E4= 44 33 3D 00               51  REGD3   DC.B    'D3=',0
000010E8= 44 34 3D 00               52  REGD4   DC.B    'D4=',0
000010EC= 44 35 3D 00               53  REGD5   DC.B    'D5=',0
000010F0= 44 36 3D 00               54  REGD6   DC.B    'D6=',0
000010F4= 44 37 3D 00               55  REGD7   DC.B    'D7=',0
000010F8= 41 30 3D 00               56  REGA0   DC.B    'A0=',0
000010FC= 41 31 3D 00               57  REGA1   DC.B    'A1=',0
00001100= 41 32 3D 00               58  REGA2   DC.B    'A2=',0
00001104= 41 33 3D 00               59  REGA3   DC.B    'A3=',0
00001108= 41 34 3D 00               60  REGA4   DC.B    'A4=',0
0000110C= 41 35 3D 00               61  REGA5   DC.B    'A5=',0
00001110= 41 36 3D 00               62  REGA6   DC.B    'A6=',0
00001114= 41 37 3D 00               63  REGA7   DC.B    'A7=',0
00001118                            64  
00001118                            65  REGVAL  DS.L    1
0000111C                            66          DS.L    1
00001120                            67          DS.L    1
00001124                            68          DS.L    1
00001128                            69          DS.L    1
0000112C                            70          DS.L    1
00001130                            71          DS.L    1
00001134                            72          DS.L    1
00001138                            73          DS.L    1
0000113C                            74          DS.L    1
00001140                            75          DS.L    1
00001144                            76          DS.L    1
00001148                            77          DS.L    1
0000114C                            78          DS.L    1
00001150                            79          DS.L    1
00001154                            80          DS.L    1
00001158                            81          DS.L    1
0000115C                            82          DS.L    1
00001160                            83          DS.L    1
00001164                            84          DS.L    1
00001168                            85          DS.L    1
0000116C                            86  
0000116C= 48 45 4C 50 3A 20 ...     87  HELP1   DC.B    'HELP: displays this help message',0
0000118D= 4D 44 53 50 20 3C ...     88  HELP2   DC.B    'MDSP <address1> <address2>: outputs address and memory contents from <address1> to <address2>',0
000011EB= 4D 44 53 50 20 3C ...     89  HELP2A  DC.B    'MDSP <address1>: outputs address and memory from <address1> to <address + 16 bytes',0
0000123E= 53 4F 52 54 57 20 ...     90  HELP3   DC.B    'SORTW <address1> <address2> <order>: sort block of memory between <address1> and <address2>, in ascending (A) or descending (D) order',0
000012C4= 4D 4D 20 3C 61 64 ...     91  HELP4   DC.B    'MM <address> <size>: display memory and modify/enter new data, showing byte (B), word (W), or longword (L) bytes',0
00001335= 4D 53 20 3C 61 64 ...     92  HELP5   DC.B    'MS <address> <data>: set memory at <address> to <data>, which is of type ASCII or hex',0
0000138B= 42 46 20 3C 61 64 ...     93  HELP6   DC.B    'BF <address1> <address2> <data>: fills memory between <address1> and <address2> with <data>, which is word size',0
000013FB= 42 4D 4F 56 20 3C ...     94  HELP7   DC.B    'BMOV <address1> <address2> <address3>: move block of memory between <address1> and <address2> to location starting at <address3>',0
0000147C= 42 54 53 54 20 3C ...     95  HELP8   DC.B    'BTST <address1> <address2>: test a block of memory between <address1> and <address2>',0
000014D1= 42 53 43 48 20 3C ...     96  HELP9   DC.B    'BSCH <address1> <address2> <string>: search for <string> between <address1> and <address2>',0
0000152C= 47 4F 20 3C 61 64 ...     97  HELP10  DC.B    'GO <address>: execute program at <address>',0
00001557= 44 46 3A 20 64 69 ...     98  HELP11  DC.B    'DF: display registers and values',0
00001578= 45 58 49 54 3A 20 ...     99  HELP12  DC.B    'EXIT: terminate the program',0
00001594                           100  
00001594= 42 54 53 54 20 73 ...    101  SUCCESS DC.B    'BTST successful',0
000015A4= 42 54 53 54 20 66 ...    102  FAILURE DC.B    'BTST failed',0
000015B0                           103  
000015B0= 42 75 73 20 65 72 ...    104  BUS_MSG  DC.B   'Bus error occurred',0
000015C3= 41 64 64 72 65 73 ...    105  ADDR_MSG DC.B   'Address error occurred',0
000015DA= 49 6C 6C 65 67 61 ...    106  ILLI_MSG DC.B   'Illegal instruction error occurred',0
000015FD= 44 69 76 69 64 65 ...    107  DIV0_MSG DC.B   'Divide by zero error occurred',0
0000161B= 43 68 65 63 6B 20 ...    108  CHK_MSG  DC.B   'Check error occurred',0
00001630= 50 72 69 76 69 6C ...    109  PRIV_MSG DC.B   'Privilege violation error occurred',0
00001653= 4C 69 6E 65 20 31 ...    110  LNEA_MSG DC.B   'Line 1010 error occurred',0
0000166C= 4C 69 6E 65 20 31 ...    111  LNEF_MSG DC.B   'Line 1111 error occurred',0
00001685                           112  
00001685                           113  *-----------------------------------------------------------
00001685                           114  * Program segment
00001685                           115  *-----------------------------------------------------------        
00003000                           116          ORG     $3000       
00003000                           117  *-----------------------------------------------------------
00003000                           118  * Start here: set up and call to main
00003000                           119  *-----------------------------------------------------------
00003000  6100 0078                120  START   BSR     SAVE            ;save register values in memory
00003004  6100 0032                121          BSR     SETUP           ;set up here
00003008  6100 0008                122          BSR     MAIN            ;call main
0000300C                           123          
0000300C  103C 0009                124          MOVE.B  #9,D0           ;exit program
00003010  4E4F                     125          TRAP    #15
00003012                           126          
00003012                           127  *-----------------------------------------------------------
00003012                           128  * Main method
00003012                           129  *-----------------------------------------------------------
00003012  227C 00001000            130  MAIN    MOVEA.L #PROMPT,A1
00003018  103C 000E                131          MOVE.B  #14,D0
0000301C  4E4F                     132          TRAP    #15             ;print prompt
0000301E                           133          
0000301E  227C 0000101D            134          MOVEA.L #INPUT,A1
00003024  103C 0002                135          MOVE.B  #2,D0
00003028  4E4F                     136          TRAP    #15             ;read command
0000302A                           137  
0000302A  6100 00A8                138          BSR     PARSE
0000302E                           139  
0000302E  4A07                     140          TST.B   D7
00003030  6600 0004                141          BNE     EXITMAIN
00003034                           142          
00003034  60DC                     143          BRA     MAIN            ;get next command
00003036                           144          
00003036  4E75                     145  EXITMAIN RTS
00003038                           146  
00003038                           147  *-----------------------------------------------------------
00003038                           148  * Setup exception handler
00003038                           149  *-----------------------------------------------------------
00003038  21FC 00003826 0008       150  SETUP   MOVE.L  #BUS,$008
00003040  21FC 00003874 000C       151          MOVE.L  #ADDR,$00C
00003048  21FC 000038C2 0010       152          MOVE.L  #ILLI,$010
00003050  21FC 000038EE 0014       153          MOVE.L  #DIV0,$014
00003058  21FC 00003904 0018       154          MOVE.L  #CHK,$018
00003060  21FC 000038D8 0020       155          MOVE.L  #PRIV,$020
00003068  21FC 0000391A 0028       156          MOVE.L  #LNEA,$028
00003070  21FC 00003930 002C       157          MOVE.L  #LNEF,$02C
00003078  4E75                     158          RTS
0000307A                           159  
0000307A                           160  *-----------------------------------------------------------
0000307A                           161  * SAVE: save registers
0000307A                           162  *-----------------------------------------------------------
0000307A  48E7 80C0                163  SAVE    MOVEM.L D0/A0/A1,-(SP)
0000307E  48E7 80C0                164          MOVEM.L D0/A0/A1,-(SP)
00003082  227C 00001118            165          MOVEA.L #REGVAL,A1
00003088                           166  
00003088  22FA CF76                167          MOVE.L  0(PC),(A1)+
0000308C  40D9                     168          MOVE.W  SR,(A1)+
0000308E  22CF                     169          MOVE.L  A7,(A1)+        ;SSP
00003090  22CF                     170          MOVE.L  SP,(A1)+       ;USP
00003092                           171  
00003092  227C 00001118            172          MOVEA.L #REGVAL,A1
00003098  D3FC 00000010            173          ADDA.L  #16,A1
0000309E                           174  
0000309E  22C0                     175          MOVE.L  D0,(A1)+
000030A0  22C1                     176          MOVE.L  D1,(A1)+
000030A2  22C2                     177          MOVE.L  D2,(A1)+
000030A4  22C3                     178          MOVE.L  D3,(A1)+
000030A6  22C4                     179          MOVE.L  D4,(A1)+
000030A8  22C5                     180          MOVE.L  D5,(A1)+
000030AA  22C6                     181          MOVE.L  D6,(A1)+
000030AC  22C7                     182          MOVE.L  D7,(A1)+
000030AE  22C8                     183          MOVE.L  A0,(A1)+
000030B0                           184  
000030B0  4CDF 0301                185          MOVEM.L (SP)+,D0/A0/A1
000030B4  207C 00001118            186          MOVEA.L #REGVAL,A0
000030BA  D1FC 00000034            187          ADDA.L  #52,A0
000030C0  20C9                     188          MOVE.L  A1,(A0)+
000030C2                           189  
000030C2                           190  
000030C2  20CA                     191          MOVE.L  A2,(A0)+
000030C4  20CB                     192          MOVE.L  A3,(A0)+
000030C6  20CC                     193          MOVE.L  A4,(A0)+
000030C8  20CD                     194          MOVE.L  A5,(A0)+
000030CA  20CE                     195          MOVE.L  A6,(A0)+
000030CC  20CF                     196          MOVE.L  A7,(A0)+
000030CE                           197  
000030CE  4CDF 0301                198          MOVEM.L (SP)+,D0/A0/A1
000030D2  4E75                     199          RTS
000030D4                           200  
000030D4                           201  *-----------------------------------------------------------
000030D4                           202  * Parse commands
000030D4                           203  * D7 signifies EXIT command received
000030D4                           204  *-----------------------------------------------------------
000030D4  48E7 8070                205  PARSE   MOVEM.L A1/A2/A3/D0,-(SP)     ;save registers
000030D8                           206  
000030D8  4247                     207          CLR D7
000030DA                           208  
000030DA  227C 0000101D            209          MOVEA.L #INPUT,A1       ;get front of string
000030E0                           210          
000030E0  247C 0000106D            211          MOVEA.L #COMP_TBL,A2    ;get item in command string table
000030E6  267C 0000106D            212          MOVEA.L #COMP_TBL,A3
000030EC                           213          
000030EC  7004                     214          MOVE.L  #4,D0           ;set D0 to number of chars to check
000030EE                           215  
000030EE  B709                     216  PHELP   CMP.B   (A1)+,(A3)+     ;is command HELP?
000030F0  56C8 FFFC                217          DBNE    D0,PHELP        ;check next character
000030F4  6600 000A                218          BNE     NHELP           ;if did not match, check next string
000030F8  6100 018A                219          BSR     HELP
000030FC  6000 0174                220          BRA     EXITPARSE
00003100                           221  
00003100  227C 0000101D            222  NHELP   MOVEA.L #INPUT,A1
00003106  6100 0170                223          BSR     NCHAR
0000310A  7004                     224          MOVE.L  #4,D0
0000310C                           225  
0000310C  B709                     226  PMDSP   CMP.B   (A1)+,(A3)+     ;is command MDSP?
0000310E  56C8 FFFC                227          DBNE    D0,PMDSP        ;check next character
00003112  6600 000A                228          BNE     NMDSP
00003116  6100 0212                229          BSR     MDSP
0000311A  6000 0156                230          BRA     EXITPARSE       ;if all chars matched, exit
0000311E                           231  
0000311E  227C 0000101D            232  NMDSP   MOVEA.L #INPUT,A1
00003124  6100 0152                233          BSR     NCHAR
00003128  7005                     234          MOVE.L  #5,D0
0000312A                           235  
0000312A  B709                     236  PSORTW  CMP.B   (A1)+,(A3)+     ;is command SORTW?
0000312C  56C8 FFFC                237          DBNE    D0,PSORTW       ;check next character
00003130  6600 000A                238          BNE     NSORTW
00003134  6100 0248                239          BSR     SORTW
00003138  6000 0138                240          BRA     EXITPARSE       ;if all chars matched, exit
0000313C                           241  
0000313C  227C 0000101D            242  NSORTW  MOVEA.L #INPUT,A1
00003142  6100 0134                243          BSR     NCHAR
00003146  7002                     244          MOVE.L  #2,D0
00003148                           245  
00003148  B709                     246  PMM     CMP.B   (A1)+,(A3)+     ;is command MM?
0000314A  56C8 FFFC                247          DBNE    D0,PMM          ;check next character
0000314E  6600 000A                248          BNE     NMM
00003152  6100 026C                249          BSR     MM
00003156  6000 011A                250          BRA     EXITPARSE       ;if all chars matched, exit
0000315A                           251  
0000315A  227C 0000101D            252  NMM     MOVEA.L #INPUT,A1
00003160  6100 0116                253          BSR     NCHAR
00003164  7002                     254          MOVE.L  #2,D0
00003166                           255  
00003166  B709                     256  PMS     CMP.B   (A1)+,(A3)+     ;is command MS?
00003168  56C8 FFFC                257          DBNE    D0,PMS          ;check next character
0000316C  6600 000A                258          BNE     NMS
00003170  6100 02E6                259          BSR     MS
00003174  6000 00FC                260          BRA     EXITPARSE       ;if all chars matched, exit
00003178                           261  
00003178  227C 0000101D            262  NMS     MOVEA.L #INPUT,A1
0000317E  6100 00F8                263          BSR     NCHAR
00003182  7002                     264          MOVE.L  #2,D0
00003184                           265  
00003184  B709                     266  PBF     CMP.B   (A1)+,(A3)+     ;is command BF?
00003186  56C8 FFFC                267          DBNE    D0,PBF          ;check next character
0000318A  6600 000A                268          BNE     NBF
0000318E  6100 02DE                269          BSR     BF
00003192  6000 00DE                270          BRA     EXITPARSE       ;if all chars matched, exit
00003196                           271  
00003196  227C 0000101D            272  NBF     MOVEA.L #INPUT,A1
0000319C  6100 00DA                273          BSR     NCHAR
000031A0  7004                     274          MOVE.L  #4,D0
000031A2                           275  
000031A2  B709                     276  PBMOV   CMP.B   (A1)+,(A3)+     ;is command MOV?
000031A4  56C8 FFFC                277          DBNE    D0,PBMOV        ;check next character
000031A8  6600 000A                278          BNE     NBMOV
000031AC  6100 02E4                279          BSR     BMOV
000031B0  6000 00C0                280          BRA     EXITPARSE       ;if all chars matched, exit
000031B4                           281  
000031B4  227C 0000101D            282  NBMOV   MOVEA.L #INPUT,A1
000031BA  6100 00BC                283          BSR     NCHAR
000031BE  7004                     284          MOVE.L  #4,D0
000031C0                           285  
000031C0  B709                     286  PBTST   CMP.B   (A1)+,(A3)+     ;is command BTST?
000031C2  56C8 FFFC                287          DBNE    D0,PBTST        ;check next character
000031C6  6600 000A                288          BNE     NBTST
000031CA  6100 02EC                289          BSR     BTST
000031CE  6000 00A2                290          BRA     EXITPARSE       ;if all chars matched, exit
000031D2                           291  
000031D2  227C 0000101D            292  NBTST   MOVEA.L #INPUT,A1
000031D8  6100 009E                293          BSR     NCHAR
000031DC  7004                     294          MOVE.L  #4,D0
000031DE                           295  
000031DE  B709                     296  PBSCH   CMP.B   (A1)+,(A3)+     ;is command BSCH?
000031E0  56C8 FFFC                297          DBNE    D0,PBSCH        ;check next character
000031E4  6600 000A                298          BNE     NBSCH
000031E8  6100 0374                299          BSR     BSCH
000031EC  6000 0084                300          BRA     EXITPARSE       ;if all chars matched, exit
000031F0                           301  
000031F0  227C 0000101D            302  NBSCH   MOVEA.L #INPUT,A1
000031F6  6100 0080                303          BSR     NCHAR
000031FA  7002                     304          MOVE.L  #2,D0
000031FC                           305  
000031FC  B709                     306  PGO     CMP.B   (A1)+,(A3)+     ;is command GO?
000031FE  56C8 FFFC                307          DBNE    D0,PGO          ;check next character
00003202  6600 000A                308          BNE     NGO
00003206  6100 03B8                309          BSR     GO
0000320A  6000 0066                310          BRA     EXITPARSE       ;if all chars matched, exit
0000320E                           311  
0000320E  227C 0000101D            312  NGO     MOVEA.L #INPUT,A1
00003214  6100 0062                313          BSR     NCHAR
00003218  7002                     314          MOVE.L  #2,D0
0000321A                           315  
0000321A  B709                     316  PDF     CMP.B   (A1)+,(A3)+     ;is command DF?
0000321C  56C8 FFFC                317          DBNE    D0,PDF          ;check next character
00003220  6600 000A                318          BNE     NDF
00003224  6100 03AE                319          BSR     DF
00003228  6000 0048                320          BRA     EXITPARSE       ;if all chars matched, exit
0000322C                           321  
0000322C  227C 0000101D            322  NDF     MOVEA.L #INPUT,A1
00003232  6100 0044                323          BSR     NCHAR
00003236  7004                     324          MOVE.L  #4,D0
00003238                           325  
00003238  B709                     326  PECHO   CMP.B   (A1)+,(A3)+     ;is command ECHO?
0000323A  56C8 FFFC                327          DBNE    D0,PECHO        ;check next character
0000323E  6600 000A                328          BNE     NECHO
00003242  6100 05D2                329          BSR     ECHO
00003246  6000 002A                330          BRA     EXITPARSE       ;if all chars matched, exit
0000324A                           331  
0000324A  227C 0000101D            332  NECHO   MOVEA.L #INPUT,A1
00003250  6100 0026                333          BSR     NCHAR
00003254  7004                     334          MOVE.L  #4,D0
00003256                           335  
00003256  B709                     336  PEXIT   CMP.B   (A1)+,(A3)+     ;is command EXIT?
00003258  56C8 FFFC                337          DBNE    D0,PEXIT        ;check next character
0000325C  6600 0008                338          BNE     NEXIT
00003260  7E01                     339          MOVE.L  #1,D7
00003262  6000 000E                340          BRA     EXITPARSE       ;if all chars matched, exit
00003266                           341  
00003266  227C 0000100D            342  NEXIT   MOVEA.L #INVALID,A1     ;if got here, failed
0000326C  103C 000D                343          MOVE.B  #13,D0
00003270  4E4F                     344          TRAP    #15
00003272                           345          
00003272                           346  EXITPARSE
00003272  4CDF 0E01                347          MOVEM.L (SP)+,A1/A2/A3/D0 ;restore registers
00003276  4E75                     348          RTS
00003278                           349  
00003278                           350  *-----------------------------------------------------------
00003278                           351  * Helper function for incrementing between checks
00003278                           352  *-----------------------------------------------------------
00003278  227C 0000101D            353  NCHAR   MOVEA.L #INPUT,A1       ;reset A1 to beginning of input string
0000327E  5E8A                     354          ADDA.L  #7,A2           ;increment to get next command string
00003280  264A                     355          MOVEA.L A2,A3           ;update counter 
00003282  4E75                     356          RTS
00003284                           357  
00003284                           358  *-----------------------------------------------------------
00003284                           359  * HELP
00003284                           360  *-----------------------------------------------------------
00003284  48E7 8040                361  HELP    MOVEM.L D0/A1,-(SP)     ;save registers
00003288                           362  
00003288  227C 0000116C            363          MOVEA.L #HELP1,A1
0000328E  103C 000D                364          MOVE.B  #13,D0
00003292  4E4F                     365          TRAP    #15
00003294                           366  
00003294  227C 0000118D            367          MOVEA.L #HELP2,A1
0000329A  103C 000D                368          MOVE.B  #13,D0
0000329E  4E4F                     369          TRAP    #15
000032A0                           370  
000032A0  227C 000011EB            371          MOVEA.L #HELP2A,A1
000032A6  103C 000D                372          MOVE.B  #13,D0
000032AA  4E4F                     373          TRAP    #15
000032AC                           374  
000032AC  227C 0000123E            375          MOVEA.L #HELP3,A1
000032B2  103C 000D                376          MOVE.B  #13,D0
000032B6  4E4F                     377          TRAP    #15
000032B8                           378  
000032B8  227C 000012C4            379          MOVEA.L #HELP4,A1
000032BE  103C 000D                380          MOVE.B  #13,D0
000032C2  4E4F                     381          TRAP    #15
000032C4                           382  
000032C4  227C 00001335            383          MOVEA.L #HELP5,A1
000032CA  103C 000D                384          MOVE.B  #13,D0
000032CE  4E4F                     385          TRAP    #15
000032D0                           386  
000032D0  227C 0000138B            387          MOVEA.L #HELP6,A1
000032D6  103C 000D                388          MOVE.B  #13,D0
000032DA  4E4F                     389          TRAP    #15
000032DC                           390  
000032DC  227C 000013FB            391          MOVEA.L #HELP7,A1
000032E2  103C 000D                392          MOVE.B  #13,D0
000032E6  4E4F                     393          TRAP    #15
000032E8                           394  
000032E8  227C 0000147C            395          MOVEA.L #HELP8,A1
000032EE  103C 000D                396          MOVE.B  #13,D0
000032F2  4E4F                     397          TRAP    #15
000032F4                           398  
000032F4  227C 000014D1            399          MOVEA.L #HELP9,A1
000032FA  103C 000D                400          MOVE.B  #13,D0
000032FE  4E4F                     401          TRAP    #15
00003300                           402  
00003300  227C 0000152C            403          MOVEA.L #HELP10,A1
00003306  103C 000D                404          MOVE.B  #13,D0
0000330A  4E4F                     405          TRAP    #15
0000330C                           406  
0000330C  227C 00001557            407          MOVEA.L #HELP11,A1
00003312  103C 000D                408          MOVE.B  #13,D0
00003316  4E4F                     409          TRAP    #15
00003318                           410  
00003318  227C 00001578            411          MOVEA.L #HELP12,A1
0000331E  103C 000D                412          MOVE.B  #13,D0
00003322  4E4F                     413          TRAP    #15
00003324                           414  
00003324  4CDF 0201                415          MOVEM.L (SP)+,D0/A1     ;restore registers
00003328  4E75                     416          RTS
0000332A                           417  
0000332A                           418  *-----------------------------------------------------------
0000332A                           419  * MDSP
0000332A                           420  *-----------------------------------------------------------
0000332A  48E7 C030                421  MDSP    MOVEM.L D0/D1/A2/A3,-(SP)
0000332E                           422  
0000332E  6100 062C                423          BSR     ASCII           ;get first argument
00003332  2441                     424          MOVEA.L D1,A2
00003334  6100 0626                425          BSR     ASCII           ;get second argument
00003338  2641                     426          MOVEA.L D1,A3
0000333A                           427  
0000333A  B7FC 00000000            428          CMPA.L  #0,A3           ;how many arguments?
00003340  6600 000A                429          BNE     MEMLOOP
00003344  264A                     430          MOVEA.L A2,A3
00003346  D7FC 00000010            431          ADDA.L  #16,A3          ;if one argument, 16 bytes
0000334C                           432   
0000334C  B7CA                     433  MEMLOOP CMPA.L  A2,A3           ;continue while still in range
0000334E  6F00 0028                434          BLE     MDSPEXIT
00003352                           435  
00003352  220A                     436          MOVE.L  A2,D1           ;print address
00003354  143C 0010                437          MOVE.B  #16,D2
00003358  103C 000F                438          MOVE.B  #15,D0
0000335C  4E4F                     439          TRAP    #15
0000335E                           440  
0000335E  723A                     441          MOVE.L  #$3A,D1         ;print colon
00003360  103C 0006                442          MOVE.B  #6,D0
00003364  4E4F                     443          TRAP    #15
00003366                           444          
00003366  221A                     445          MOVE.L  (A2)+,D1        ;print value
00003368  143C 0010                446          MOVE.B  #16,D2
0000336C  103C 000F                447          MOVE.B  #15,D0
00003370  4E4F                     448          TRAP    #15
00003372                           449  
00003372  6100 0622                450          BSR     CRLF
00003376                           451  
00003376  60D4                     452          BRA     MEMLOOP
00003378                           453  
00003378  4CDF 0C03                454  MDSPEXIT MOVEM.L (SP)+,D0/D1/A2/A3
0000337C  4E75                     455          RTS
0000337E                           456  
0000337E                           457  *-----------------------------------------------------------
0000337E                           458  * SORTW
0000337E                           459  *-----------------------------------------------------------
0000337E  48E7 E038                460  SORTW   MOVEM.L D0/D1/D2/A2/A3/A4,-(SP)
00003382                           461  
00003382  6100 05D8                462          BSR     ASCII           ;get first argument
00003386  2441                     463          MOVEA.L D1,A2
00003388  6100 05D2                464          BSR     ASCII           ;get second argument
0000338C  2641                     465          MOVEA.L D1,A3
0000338E  1419                     466          MOVE.B  (A1)+,D2        ;get third argument
00003390                           467  
00003390  284A                     468          MOVEA.L A2,A4
00003392  244C                     469  SORTLOOP MOVEA.L A4,A2
00003394  B43C 0041                470  BUBBLE  CMP.B   #$41,D2         ;is it "A"?
00003398  6E00 000C                471          BGT     DSC
0000339C  B54A                     472  ASC     CMP.W   (A2)+,(A2)+
0000339E  6300 0014                473          BLS     CMPNXT          ;sort ascending
000033A2  6000 0008                474          BRA     SWAP
000033A6  B54A                     475  DSC     CMP.W   (A2)+,(A2)+
000033A8  6200 000A                476          BHI     CMPNXT          ;sort descending
000033AC                           477  
000033AC  2022                     478  SWAP    MOVE.L  -(A2),D0
000033AE  4840                     479          SWAP.W  D0
000033B0  2480                     480          MOVE.L  D0,(A2)
000033B2  60DE                     481          BRA     SORTLOOP
000033B4                           482  
000033B4  558A                     483  CMPNXT  SUBA.L  #2,A2
000033B6  B7CA                     484          CMP.L   A2,A3
000033B8  6EDA                     485          BGT     BUBBLE
000033BA                           486  
000033BA  4CDF 1C07                487          MOVEM.L (SP)+,D0/D1/D2/A2/A3/A4
000033BE  4E75                     488          RTS
000033C0                           489  
000033C0                           490  *-----------------------------------------------------------
000033C0                           491  * MM
000033C0                           492  *-----------------------------------------------------------
000033C0  48E7 F020                493  MM      MOVEM.L D0/D1/D2/D3/A2,-(SP)
000033C4                           494  
000033C4  6100 0596                495          BSR     ASCII           ;get address argument
000033C8  2441                     496          MOVEA.L D1,A2
000033CA  1619                     497          MOVE.B  (A1)+,D3
000033CC                           498  
000033CC  220A                     499  MMNXT   MOVE.L  A2,D1           ;print address
000033CE  143C 0010                500          MOVE.B  #16,D2
000033D2  103C 000F                501          MOVE.B  #15,D0
000033D6  4E4F                     502          TRAP    #15
000033D8                           503  
000033D8  723A                     504          MOVE.L  #$3A,D1         ;print colon
000033DA  103C 0006                505          MOVE.B  #6,D0
000033DE  4E4F                     506          TRAP    #15
000033E0                           507          
000033E0  4281                     508          CLR.L   D1
000033E2  B63C 0042                509          CMP.B   #$42,D3         ;is it a byte?
000033E6  6600 0008                510          BNE     MMWORD
000033EA  121A                     511          MOVE.B  (A2)+,D1
000033EC  6000 0012                512          BRA     MMTRAP
000033F0                           513  
000033F0  B63C 0057                514  MMWORD  CMP.B   #$57,D3         ;is it a word?
000033F4  6600 0008                515          BNE     MMLONG
000033F8  321A                     516          MOVE.W  (A2)+,D1
000033FA  6000 0004                517          BRA     MMTRAP
000033FE                           518  
000033FE  221A                     519  MMLONG  MOVE.L  (A2)+,D1        ;it must be a long
00003400                           520  
00003400  143C 0010                521  MMTRAP  MOVE.B  #16,D2
00003404  103C 000F                522          MOVE.B  #15,D0
00003408  4E4F                     523          TRAP    #15
0000340A                           524  
0000340A  723F                     525          MOVE.L  #$3F,D1         ;print ?
0000340C  103C 0006                526          MOVE.B  #6,D0
00003410  4E4F                     527          TRAP    #15
00003412                           528  
00003412  227C 0000101D            529          MOVEA.L #INPUT,A1
00003418  103C 0002                530          MOVE.B  #2,D0
0000341C  4E4F                     531          TRAP    #15             ;read value
0000341E                           532  
0000341E  0C11 002E                533          CMP.B   #$2E,(A1)       ;quit on . entered
00003422  6700 002E                534          BEQ     EXMM
00003426                           535  
00003426  4A01                     536          TST.B   D1
00003428  67A2                     537          BEQ     MMNXT
0000342A                           538          
0000342A  6100 0530                539          BSR     ASCII           ;convert value to hex
0000342E                           540  
0000342E  B63C 0042                541          CMP.B   #$42,D3         ;is it a byte?
00003432  6600 0008                542          BNE     MMWORD2
00003436  1501                     543          MOVE.B  D1,-(A2)
00003438  528A                     544          ADDA.L  #1,A2
0000343A  6090                     545          BRA     MMNXT
0000343C                           546  
0000343C  B63C 0057                547  MMWORD2 CMP.B   #$57,D3         ;is it a word?
00003440  6600 0008                548          BNE     MMLONG2
00003444  3501                     549          MOVE.W  D1,-(A2)
00003446  548A                     550          ADDA.L  #2,A2
00003448  6082                     551          BRA     MMNXT
0000344A                           552  
0000344A  2501                     553  MMLONG2 MOVE.L  D1,-(A2)        ;it must be a long
0000344C  588A                     554          ADDA.L  #4,A2
0000344E                           555          
0000344E  6000 FF7C                556          BRA     MMNXT
00003452                           557  
00003452  4CDF 040F                558  EXMM    MOVEM.L (SP)+,D0/D1/D2/D3/A2
00003456  4E75                     559          RTS
00003458                           560  
00003458                           561  *-----------------------------------------------------------
00003458                           562  * MS
00003458                           563  *-----------------------------------------------------------
00003458  48E7 4020                564  MS      MOVEM.L D1/A2,-(SP)
0000345C                           565  
0000345C  6100 04FE                566          BSR     ASCII           ;read address argument
00003460  2441                     567          MOVEA.L D1,A2
00003462  6100 04F8                568          BSR     ASCII           ;read data argument
00003466                           569  
00003466  3481                     570          MOVE.W  D1,(A2)         ;write data to memory
00003468                           571  
00003468  4CDF 0402                572          MOVEM.L (SP)+,D1/A2
0000346C  4E75                     573          RTS
0000346E                           574  
0000346E                           575  *-----------------------------------------------------------
0000346E                           576  * BF
0000346E                           577  *-----------------------------------------------------------
0000346E  48E7 4030                578  BF      MOVEM.L D1/A2/A3,-(SP)
00003472                           579  
00003472  6100 04E8                580          BSR     ASCII           ;read start address
00003476  2441                     581          MOVEA.L D1,A2
00003478  6100 04E2                582          BSR     ASCII           ;read end address
0000347C  2641                     583          MOVEA.L D1,A3
0000347E  6100 04DC                584          BSR     ASCII           ;read data
00003482                           585  
00003482  B7CA                     586  BFLOOP  CMP.L   A2,A3
00003484  6D00 0006                587          BLT     EXBF
00003488  34C1                     588          MOVE.W  D1,(A2)+        ;write to memory
0000348A  60F6                     589          BRA     BFLOOP
0000348C                           590  
0000348C  4CDF 0C02                591  EXBF    MOVEM.L (SP)+,D1/A2/A3
00003490  4E75                     592          RTS
00003492                           593  
00003492                           594  *-----------------------------------------------------------
00003492                           595  * BMOV
00003492                           596  *-----------------------------------------------------------
00003492  48E7 4038                597  BMOV    MOVEM.L D1/A2/A3/A4,-(SP)
00003496                           598  
00003496  6100 04C4                599          BSR     ASCII           ;read original start address
0000349A  2441                     600          MOVEA.L D1,A2
0000349C  6100 04BE                601          BSR     ASCII           ;read origina end address
000034A0  2641                     602          MOVEA.L D1,A3
000034A2  6100 04B8                603          BSR     ASCII           ;read new start address
000034A6  2841                     604          MOVEA.L D1,A4
000034A8                           605  
000034A8  B7CA                     606  BMOVLOOP CMP.L  A2,A3
000034AA  6D00 0006                607          BLT     EXBMOV
000034AE  38DA                     608          MOVE.W  (A2)+,(A4)+     ;copy memory to new loc
000034B0  60F6                     609          BRA     BMOVLOOP
000034B2                           610  
000034B2  4CDF 1C02                611  EXBMOV  MOVEM.L (SP)+,D1/A2/A3/A4
000034B6  4E75                     612          RTS
000034B8                           613  
000034B8                           614  *-----------------------------------------------------------
000034B8                           615  * BTST
000034B8                           616  *-----------------------------------------------------------
000034B8  48E7 E038                617  BTST    MOVEM.L D0/D1/D2/A2/A3/A4,-(SP)
000034BC                           618  
000034BC  6100 049E                619          BSR     ASCII           ;get start address
000034C0  2441                     620          MOVEA.L D1,A2
000034C2  2841                     621          MOVEA.L D1,A4
000034C4  6100 0496                622          BSR     ASCII           ;get end address
000034C8  2641                     623          MOVEA.L D1,A3
000034CA                           624  
000034CA  B7CA                     625  BTSTLOOP1 CMP.L A2,A3
000034CC  6D00 0008                626          BLT     ENDLOOP1
000034D0  14FC 0055                627          MOVE.B  #$55,(A2)+      ;fill memory
000034D4  60F4                     628          BRA     BTSTLOOP1
000034D6  244C                     629  ENDLOOP1 MOVEA.L A4,A2
000034D8  143C 0055                630          MOVE.B  #$55,D2
000034DC                           631  
000034DC  B7CA                     632  BTSTLOOP2 CMP.L A2,A3
000034DE  6D00 0010                633          BLT     ENDLOOP2
000034E2  0C12 0055                634          CMP.B   #$55,(A2)       ;check read value
000034E6  6600 001E                635          BNE     BAD
000034EA  14FC 00AA                636          MOVE.B  #$AA,(A2)+      ;fill memory
000034EE  60EC                     637          BRA     BTSTLOOP2
000034F0  244C                     638  ENDLOOP2 MOVEA.L A4,A2
000034F2  143C 00AA                639          MOVE.B  #$AA,D2
000034F6                           640  
000034F6  B7CA                     641  BTSTLOOP3 CMP.L A2,A3
000034F8  6D00 0052                642          BLT     GOOD
000034FC  0C1A 00AA                643          CMP.B   #$AA,(A2)+      ;check read value
00003500  6600 0004                644          BNE     BAD
00003504  60F0                     645          BRA     BTSTLOOP3
00003506                           646  
00003506  538A                     647  BAD     SUBA.L  #1,A2           ;go back to broken address
00003508                           648  
00003508  227C 000015A4            649          MOVEA.L #FAILURE,A1     ;print failure message
0000350E  103C 000D                650          MOVE.B  #13,D0
00003512  4E4F                     651          TRAP    #15
00003514                           652  
00003514  220A                     653          MOVE.L  A2,D1           ;print address
00003516  143C 0010                654          MOVE.B  #16,D2
0000351A  103C 000F                655          MOVE.B  #15,D0
0000351E  4E4F                     656          TRAP    #15
00003520                           657  
00003520  723A                     658          MOVE.L  #$3A,D1         ;print colon
00003522  103C 0006                659          MOVE.B  #6,D0
00003526  4E4F                     660          TRAP    #15
00003528                           661  
00003528  2202                     662          MOVE.L  D2,D1           ;print data stored
0000352A  143C 0010                663          MOVE.B  #16,D2
0000352E  103C 000F                664          MOVE.B  #15,D0
00003532  4E4F                     665          TRAP    #15
00003534                           666          
00003534  722C                     667          MOVE.L  #$2C,D1         ;print comma
00003536  103C 0006                668          MOVE.B  #6,D0
0000353A  4E4F                     669          TRAP    #15
0000353C                           670  
0000353C  2212                     671          MOVE.L  (A2),D1         ;print data read
0000353E  143C 0010                672          MOVE.B  #16,D2
00003542  103C 000F                673          MOVE.B  #15,D0
00003546  4E4F                     674          TRAP    #15
00003548                           675  
00003548  6000 000E                676          BRA     EXBTST
0000354C                           677  
0000354C  227C 00001594            678  GOOD    MOVEA.L #SUCCESS,A1     ;print success message
00003552  103C 000D                679          MOVE.B  #13,D0
00003556  4E4F                     680          TRAP    #15
00003558                           681  
00003558  4CDF 1C07                682  EXBTST  MOVEM.L (SP)+,D0/D1/D2/A2/A3/A4
0000355C  4E75                     683          RTS
0000355E                           684  
0000355E                           685  *-----------------------------------------------------------
0000355E                           686  * BSCH
0000355E                           687  *-----------------------------------------------------------
0000355E  48E7 E07C                688  BSCH    MOVEM.L D0/D1/D2/A1/A2/A3/A4/A5,-(SP)
00003562                           689  
00003562  6100 03F8                690          BSR     ASCII           ;get start address
00003566  2441                     691          MOVEA.L D1,A2
00003568  2A4A                     692          MOVEA.L A2,A5
0000356A  6100 03F0                693          BSR     ASCII           ;get end address
0000356E  2641                     694          MOVEA.L D1,A3
00003570  2849                     695          MOVEA.L A1,A4           ;save start of search string
00003572                           696  
00003572  4280                     697          CLR.L   D0
00003574  0C19 0000                698  LENSCH  CMP.B   #$00,(A1)+      ;get length of search string
00003578  6700 0006                699          BEQ     SAVELEN     
0000357C  5280                     700          ADDI.L  #1,D0
0000357E  60F4                     701          BRA     LENSCH
00003580                           702  
00003580  2600                     703  SAVELEN MOVE.L  D0,D3
00003582                           704  
00003582  224C                     705  SCHLOOP MOVEA.L A4,A1           ;restore to start of search
00003584  244D                     706          MOVEA.L A5,A2           ;check with next char
00003586  2003                     707          MOVE.L  D3,D0           ;restore search length
00003588  B7CA                     708          CMP.L   A2,A3
0000358A  6D00 002E                709          BLT     ENDSCH
0000358E                           710  
0000358E  528D                     711          ADDA.L  #1,A5           ;next starting point
00003590                           712  
00003590  B509                     713  SCHFIND CMP.B   (A1)+,(A2)+     ;does string match?
00003592  56C8 FFFC                714          DBNE    D0,SCHFIND      ;check next character
00003596  66EA                     715          BNE     SCHLOOP
00003598                           716  
00003598  538D                     717          SUBA.L  #1,A5           ;go back to starting address
0000359A  220D                     718          MOVE.L  A5,D1           ;print address
0000359C  143C 0010                719          MOVE.B  #16,D2
000035A0  103C 000F                720          MOVE.B  #15,D0
000035A4  4E4F                     721          TRAP    #15
000035A6                           722  
000035A6  723A                     723          MOVE.L  #$3A,D1         ;print colon
000035A8  103C 0006                724          MOVE.B  #6,D0
000035AC  4E4F                     725          TRAP    #15
000035AE                           726  
000035AE  224D                     727          MOVE.L  A5,A1           ;print data
000035B0  103C 000D                728          MOVE.B  #13,D0
000035B4  4E4F                     729          TRAP    #15
000035B6                           730  
000035B6  528D                     731          ADDA.L  #1,A5           ;restore to next starting address
000035B8  60C8                     732          BRA     SCHLOOP
000035BA                           733  
000035BA  4CDF 3E07                734  ENDSCH  MOVEM.L (SP)+,D0/D1/D2/A1/A2/A3/A4/A5
000035BE  4E75                     735          RTS
000035C0                           736  
000035C0                           737  *-----------------------------------------------------------
000035C0                           738  * GO
000035C0                           739  *-----------------------------------------------------------
000035C0  48E7 4040                740  GO      MOVEM.L D1/A1,-(SP)
000035C4                           741  
000035C4  6100 0396                742          BSR     ASCII           ;get address
000035C8  2241                     743          MOVEA.L D1,A1           ;use arbitrary address
000035CA  4EA9 0000                744          JSR     0(A1)
000035CE                           745  
000035CE  4CDF 0202                746          MOVEM.L (SP)+,D1/A1
000035D2  4E75                     747          RTS
000035D4                           748  
000035D4                           749  *-----------------------------------------------------------
000035D4                           750  * DF
000035D4                           751  *-----------------------------------------------------------
000035D4  48E7 E0C0                752  DF      MOVEM.L D0/D1/D2/A0/A1,-(SP)
000035D8                           753  
000035D8  207C 00001118            754          MOVEA.L #REGVAL,A0
000035DE                           755  
000035DE  227C 000010C8            756          MOVEA.L #REGPC,A1
000035E4  103C 000E                757          MOVE.B  #14,D0          ;print PC
000035E8  4E4F                     758          TRAP    #15
000035EA  2218                     759          MOVE.L  (A0)+,D1        ;print value
000035EC  143C 0010                760          MOVE.B  #16,D2
000035F0  103C 000F                761          MOVE.B  #15,D0
000035F4  4E4F                     762          TRAP    #15
000035F6  6100 039E                763          BSR     CRLF
000035FA                           764  
000035FA  227C 000010CC            765          MOVEA.L #REGSR,A1
00003600  103C 000E                766          MOVE.B  #14,D0          ;print SR
00003604  4E4F                     767          TRAP    #15
00003606  3218                     768          MOVE.W  (A0)+,D1        ;print value
00003608  143C 0010                769          MOVE.B  #16,D2
0000360C  103C 000F                770          MOVE.B  #15,D0
00003610  4E4F                     771          TRAP    #15
00003612  6100 0382                772          BSR     CRLF
00003616                           773  
00003616  227C 000010D0            774          MOVEA.L #REGUS,A1
0000361C  103C 000E                775          MOVE.B  #14,D0          ;print US
00003620  4E4F                     776          TRAP    #15
00003622  2218                     777          MOVE.L  (A0)+,D1        ;print value
00003624  143C 0010                778          MOVE.B  #16,D2
00003628  103C 000F                779          MOVE.B  #15,D0
0000362C  4E4F                     780          TRAP    #15
0000362E  6100 0366                781          BSR     CRLF
00003632                           782  
00003632  227C 000010D4            783          MOVEA.L #REGSS,A1
00003638  103C 000E                784          MOVE.B  #14,D0          ;print SS
0000363C  4E4F                     785          TRAP    #15
0000363E  2218                     786          MOVE.L  (A0)+,D1        ;print value
00003640  143C 0010                787          MOVE.B  #16,D2
00003644  103C 000F                788          MOVE.B  #15,D0
00003648  4E4F                     789          TRAP    #15
0000364A  6100 034A                790          BSR     CRLF
0000364E                           791  
0000364E  227C 000010D8            792          MOVEA.L #REGD0,A1
00003654  103C 000E                793          MOVE.B  #14,D0          ;print D0
00003658  4E4F                     794          TRAP    #15
0000365A  2218                     795          MOVE.L  (A0)+,D1        ;print value
0000365C  143C 0010                796          MOVE.B  #16,D2
00003660  103C 000F                797          MOVE.B  #15,D0
00003664  4E4F                     798          TRAP    #15
00003666  6100 032E                799          BSR     CRLF
0000366A                           800  
0000366A  227C 000010DC            801          MOVEA.L #REGD1,A1
00003670  103C 000E                802          MOVE.B  #14,D0          ;print D1
00003674  4E4F                     803          TRAP    #15
00003676  2218                     804          MOVE.L  (A0)+,D1        ;print value
00003678  143C 0010                805          MOVE.B  #16,D2
0000367C  103C 000F                806          MOVE.B  #15,D0
00003680  4E4F                     807          TRAP    #15
00003682  6100 0312                808          BSR     CRLF
00003686                           809  
00003686  227C 000010E0            810          MOVEA.L #REGD2,A1
0000368C  103C 000E                811          MOVE.B  #14,D0          ;print D2
00003690  4E4F                     812          TRAP    #15
00003692  2218                     813          MOVE.L  (A0)+,D1        ;print value
00003694  143C 0010                814          MOVE.B  #16,D2
00003698  103C 000F                815          MOVE.B  #15,D0
0000369C  4E4F                     816          TRAP    #15
0000369E  6100 02F6                817          BSR     CRLF
000036A2                           818  
000036A2  227C 000010E4            819          MOVEA.L #REGD3,A1
000036A8  5889                     820          ADDA.L  #4,A1
000036AA  103C 000E                821          MOVE.B  #14,D0          ;print D3
000036AE  4E4F                     822          TRAP    #15
000036B0  2218                     823          MOVE.L  (A0)+,D1        ;print value
000036B2  143C 0010                824          MOVE.B  #16,D2
000036B6  103C 000F                825          MOVE.B  #15,D0
000036BA  4E4F                     826          TRAP    #15
000036BC  6100 02D8                827          BSR     CRLF
000036C0                           828          
000036C0  227C 000010E8            829          MOVEA.L #REGD4,A1
000036C6  103C 000E                830          MOVE.B  #14,D0          ;print D4
000036CA  4E4F                     831          TRAP    #15
000036CC  2218                     832          MOVE.L  (A0)+,D1        ;print value
000036CE  143C 0010                833          MOVE.B  #16,D2
000036D2  103C 000F                834          MOVE.B  #15,D0
000036D6  4E4F                     835          TRAP    #15
000036D8  6100 02BC                836          BSR     CRLF
000036DC                           837  
000036DC  227C 000010EC            838          MOVEA.L #REGD5,A1
000036E2  103C 000E                839          MOVE.B  #14,D0          ;print D5
000036E6  4E4F                     840          TRAP    #15
000036E8  2218                     841          MOVE.L  (A0)+,D1        ;print value
000036EA  143C 0010                842          MOVE.B  #16,D2
000036EE  103C 000F                843          MOVE.B  #15,D0
000036F2  4E4F                     844          TRAP    #15
000036F4  6100 02A0                845          BSR     CRLF
000036F8                           846  
000036F8  227C 000010F0            847          MOVEA.L #REGD6,A1
000036FE  103C 000E                848          MOVE.B  #14,D0          ;print D6
00003702  4E4F                     849          TRAP    #15
00003704  2218                     850          MOVE.L  (A0)+,D1        ;print value
00003706  143C 0010                851          MOVE.B  #16,D2
0000370A  103C 000F                852          MOVE.B  #15,D0
0000370E  4E4F                     853          TRAP    #15
00003710  6100 0284                854          BSR     CRLF
00003714                           855  
00003714  227C 000010F4            856          MOVEA.L #REGD7,A1
0000371A  103C 000E                857          MOVE.B  #14,D0          ;print D7
0000371E  4E4F                     858          TRAP    #15
00003720  2218                     859          MOVE.L  (A0)+,D1        ;print value
00003722  143C 0010                860          MOVE.B  #16,D2
00003726  103C 000F                861          MOVE.B  #15,D0
0000372A  4E4F                     862          TRAP    #15
0000372C  6100 0268                863          BSR     CRLF
00003730                           864  
00003730  227C 000010F8            865          MOVEA.L #REGA0,A1
00003736  103C 000E                866          MOVE.B  #14,D0          ;print A0
0000373A  4E4F                     867          TRAP    #15
0000373C  2218                     868          MOVE.L  (A0)+,D1        ;print value
0000373E  143C 0010                869          MOVE.B  #16,D2
00003742  103C 000F                870          MOVE.B  #15,D0
00003746  4E4F                     871          TRAP    #15
00003748  6100 024C                872          BSR     CRLF
0000374C                           873  
0000374C  227C 000010FC            874          MOVEA.L #REGA1,A1
00003752  103C 000E                875          MOVE.B  #14,D0          ;print A1
00003756  4E4F                     876          TRAP    #15
00003758  2218                     877          MOVE.L  (A0)+,D1        ;print value
0000375A  143C 0010                878          MOVE.B  #16,D2
0000375E  103C 000F                879          MOVE.B  #15,D0
00003762  4E4F                     880          TRAP    #15
00003764  6100 0230                881          BSR     CRLF
00003768                           882  
00003768  227C 00001100            883          MOVEA.L #REGA2,A1
0000376E  103C 000E                884          MOVE.B  #14,D0          ;print A2
00003772  4E4F                     885          TRAP    #15
00003774  2218                     886          MOVE.L  (A0)+,D1        ;print value
00003776  143C 0010                887          MOVE.B  #16,D2
0000377A  103C 000F                888          MOVE.B  #15,D0
0000377E  4E4F                     889          TRAP    #15
00003780  6100 0214                890          BSR     CRLF
00003784                           891  
00003784  227C 00001104            892          MOVEA.L #REGA3,A1
0000378A  103C 000E                893          MOVE.B  #14,D0          ;print A3
0000378E  4E4F                     894          TRAP    #15
00003790  2218                     895          MOVE.L  (A0)+,D1        ;print value
00003792  143C 0010                896          MOVE.B  #16,D2
00003796  103C 000F                897          MOVE.B  #15,D0
0000379A  4E4F                     898          TRAP    #15
0000379C  6100 01F8                899          BSR     CRLF
000037A0                           900  
000037A0  227C 00001108            901          MOVEA.L #REGA4,A1
000037A6  103C 000E                902          MOVE.B  #14,D0          ;print A4
000037AA  4E4F                     903          TRAP    #15
000037AC  2218                     904          MOVE.L  (A0)+,D1        ;print value
000037AE  143C 0010                905          MOVE.B  #16,D2
000037B2  103C 000F                906          MOVE.B  #15,D0
000037B6  4E4F                     907          TRAP    #15
000037B8  6100 01DC                908          BSR     CRLF
000037BC                           909  
000037BC  227C 0000110C            910          MOVEA.L #REGA5,A1
000037C2  103C 000E                911          MOVE.B  #14,D0          ;print A5
000037C6  4E4F                     912          TRAP    #15
000037C8  2218                     913          MOVE.L  (A0)+,D1        ;print value
000037CA  143C 0010                914          MOVE.B  #16,D2
000037CE  103C 000F                915          MOVE.B  #15,D0
000037D2  4E4F                     916          TRAP    #15
000037D4  6100 01C0                917          BSR     CRLF
000037D8                           918  
000037D8  227C 00001110            919          MOVEA.L #REGA6,A1
000037DE  103C 000E                920          MOVE.B  #14,D0          ;print A6
000037E2  4E4F                     921          TRAP    #15
000037E4  2218                     922          MOVE.L  (A0)+,D1        ;print value
000037E6  143C 0010                923          MOVE.B  #16,D2
000037EA  103C 000F                924          MOVE.B  #15,D0
000037EE  4E4F                     925          TRAP    #15
000037F0  6100 01A4                926          BSR     CRLF
000037F4                           927  
000037F4  227C 00001114            928          MOVEA.L #REGA7,A1
000037FA  103C 000E                929          MOVE.B  #14,D0          ;print A7
000037FE  4E4F                     930          TRAP    #15
00003800  2218                     931          MOVE.L  (A0)+,D1        ;print value
00003802  143C 0010                932          MOVE.B  #16,D2
00003806  103C 000F                933          MOVE.B  #15,D0
0000380A  4E4F                     934          TRAP    #15
0000380C  6100 0188                935          BSR     CRLF
00003810                           936  
00003810  4CDF 0307                937          MOVEM.L (SP)+,D0/D1/D2/A0/A1
00003814  4E75                     938          RTS
00003816                           939  
00003816                           940  *-----------------------------------------------------------
00003816                           941  * ECHO
00003816                           942  *-----------------------------------------------------------
00003816  48E7 8000                943  ECHO    MOVEM.L D0,-(SP)
0000381A  103C 000D                944          MOVE.B  #13,D0          ;echo input
0000381E  4E4F                     945          TRAP #15
00003820  4CDF 0001                946          MOVEM.L (SP)+,D0
00003824  4E75                     947          RTS
00003826                           948  
00003826                           949  *-----------------------------------------------------------
00003826                           950  * Bus error exception
00003826                           951  *-----------------------------------------------------------
00003826  48E7 8040                952  BUS     MOVEM.L D0/A1,-(SP)
0000382A                           953          
0000382A  227C 000015B0            954          MOVEA.L #BUS_MSG,A1
00003830  103C 000D                955          MOVE.B  #13,D0
00003834  4E4F                     956          TRAP    #15
00003836                           957  
00003836  4241                     958          CLR     D1
00003838  554F                     959          SUBA.W  #$2,A7          ;move SSP to point to SSW
0000383A  221F                     960          MOVE.L  (A7)+,D1        ;print SSW
0000383C  143C 0010                961          MOVE.B  #16,D2
00003840  103C 000F                962          MOVE.B  #15,D0
00003844  4E4F                     963          TRAP    #15
00003846                           964  
00003846  6100 013C                965          BSR     SPACE
0000384A                           966  
0000384A  4241                     967          CLR     D1
0000384C  221F                     968          MOVE.L  (A7)+,D1        ;print BA
0000384E  143C 0010                969          MOVE.B  #16,D2
00003852  103C 000F                970          MOVE.B  #15,D0
00003856  4E4F                     971          TRAP    #15
00003858                           972  
00003858  6100 012A                973          BSR     SPACE
0000385C                           974  
0000385C  4241                     975          CLR     D1
0000385E  321F                     976          MOVE.W  (A7)+,D1        ;print IR
00003860  143C 0010                977          MOVE.B  #16,D2
00003864  103C 000F                978          MOVE.B  #15,D0
00003868  4E4F                     979          TRAP    #15
0000386A                           980  
0000386A  6100 012A                981          BSR     CRLF
0000386E                           982  
0000386E  4CDF 0201                983          MOVEM.L (SP)+,D0/A1
00003872  4E73                     984          RTE
00003874                           985  
00003874                           986  *-----------------------------------------------------------
00003874                           987  * Address error exception
00003874                           988  *-----------------------------------------------------------
00003874  48E7 E040                989  ADDR    MOVEM.L D0/D1/D2/A1,-(SP)
00003878                           990          
00003878  227C 000015C3            991          MOVEA.L #ADDR_MSG,A1
0000387E  103C 000D                992          MOVE.B  #13,D0
00003882  4E4F                     993          TRAP    #15
00003884                           994  
00003884  4241                     995          CLR     D1
00003886  554F                     996          SUBA.W  #$2,A7          ;move SSP to point to SSW
00003888  221F                     997          MOVE.L  (A7)+,D1        ;print SSW
0000388A  143C 0010                998          MOVE.B  #16,D2
0000388E  103C 000F                999          MOVE.B  #15,D0
00003892  4E4F                    1000          TRAP    #15
00003894                          1001  
00003894  6100 00EE               1002          BSR     SPACE
00003898                          1003  
00003898  4241                    1004          CLR     D1
0000389A  221F                    1005          MOVE.L  (A7)+,D1        ;print BA
0000389C  143C 0010               1006          MOVE.B  #16,D2
000038A0  103C 000F               1007          MOVE.B  #15,D0
000038A4  4E4F                    1008          TRAP    #15
000038A6                          1009  
000038A6  6100 00DC               1010          BSR     SPACE
000038AA                          1011  
000038AA  4241                    1012          CLR     D1
000038AC  321F                    1013          MOVE.W  (A7)+,D1        ;print IR
000038AE  143C 0010               1014          MOVE.B  #16,D2
000038B2  103C 000F               1015          MOVE.B  #15,D0
000038B6  4E4F                    1016          TRAP    #15
000038B8                          1017  
000038B8  6100 00DC               1018          BSR     CRLF
000038BC                          1019          
000038BC  4CDF 0207               1020          MOVEM.L (SP)+,D0/D1/D2/A1
000038C0  4E73                    1021          RTE
000038C2                          1022  
000038C2                          1023  *-----------------------------------------------------------
000038C2                          1024  * Illegal instruction exception
000038C2                          1025  *-----------------------------------------------------------
000038C2  48E7 8040               1026  ILLI    MOVEM.L D0/A1,-(SP)
000038C6  227C 000015DA           1027          MOVEA.L #ILLI_MSG,A1
000038CC  103C 000D               1028          MOVE.B  #13,D0
000038D0  4E4F                    1029          TRAP    #15
000038D2  4CDF 0201               1030          MOVEM.L (SP)+,D0/A1
000038D6  4E73                    1031          RTE
000038D8                          1032  
000038D8                          1033  *-----------------------------------------------------------
000038D8                          1034  * Privilege violation exception
000038D8                          1035  *-----------------------------------------------------------
000038D8  48E7 8040               1036  PRIV    MOVEM.L D0/A1,-(SP)
000038DC  227C 00001630           1037          MOVEA.L #PRIV_MSG,A1
000038E2  103C 000D               1038          MOVE.B  #13,D0
000038E6  4E4F                    1039          TRAP    #15
000038E8  4CDF 0201               1040          MOVEM.L (SP)+,D0/A1
000038EC  4E73                    1041          RTE
000038EE                          1042  
000038EE                          1043  *-----------------------------------------------------------
000038EE                          1044  * Divide by zero exception
000038EE                          1045  *-----------------------------------------------------------
000038EE  48E7 8040               1046  DIV0    MOVEM.L D0/A1,-(SP)
000038F2  227C 000015FD           1047          MOVEA.L #DIV0_MSG,A1
000038F8  103C 000D               1048          MOVE.B  #13,D0
000038FC  4E4F                    1049          TRAP    #15
000038FE  4CDF 0201               1050          MOVEM.L (SP)+,D0/A1
00003902  4E73                    1051          RTE
00003904                          1052  
00003904                          1053  *-----------------------------------------------------------
00003904                          1054  * Check instruction exception
00003904                          1055  *-----------------------------------------------------------
00003904  48E7 8040               1056  CHK     MOVEM.L D0/A1,-(SP)
00003908  227C 0000161B           1057          MOVEA.L #CHK_MSG,A1
0000390E  103C 000D               1058          MOVE.B  #13,D0
00003912  4E4F                    1059          TRAP    #15
00003914  4CDF 0201               1060          MOVEM.L (SP)+,D0/A1
00003918  4E73                    1061          RTE
0000391A                          1062  
0000391A                          1063  *-----------------------------------------------------------
0000391A                          1064  * Line A emulator exception
0000391A                          1065  *-----------------------------------------------------------
0000391A  48E7 8040               1066  LNEA    MOVEM.L D0/A1,-(SP)
0000391E  227C 00001653           1067          MOVEA.L #LNEA_MSG,A1
00003924  103C 000D               1068          MOVE.B  #13,D0
00003928  4E4F                    1069          TRAP    #15
0000392A  4CDF 0201               1070          MOVEM.L (SP)+,D0/A1
0000392E  4E73                    1071          RTE
00003930                          1072  
00003930                          1073  *-----------------------------------------------------------
00003930                          1074  * Line F emulator exception
00003930                          1075  *-----------------------------------------------------------
00003930  48E7 8040               1076  LNEF    MOVEM.L D0/A1,-(SP)
00003934  227C 0000166C           1077          MOVEA.L #LNEF_MSG,A1
0000393A  103C 000D               1078          MOVE.B  #13,D0
0000393E  4E4F                    1079          TRAP    #15
00003940  4CDF 0201               1080          MOVEM.L (SP)+,D0/A1
00003944  4E73                    1081          RTE
00003946                          1082  
00003946                          1083  *-----------------------------------------------------------
00003946                          1084  * DIGIT: convert single ascii digit to hex
00003946                          1085  * Input: single ascii character in register D0
00003946                          1086  * Output: hex value in register D0
00003946                          1087  *-----------------------------------------------------------
00003946  B03C 0040               1088  DIGIT   CMP.B   #$40,D0
0000394A  6E00 000A               1089          BGT     HIGHER
0000394E  0400 0030               1090          SUBI.B  #$30,D0
00003952  6000 0006               1091          BRA     EXITDIGIT
00003956  0400 0037               1092  HIGHER  SUBI.B  #$37,D0
0000395A  4E75                    1093  EXITDIGIT RTS
0000395C                          1094  
0000395C                          1095  *-----------------------------------------------------------
0000395C                          1096  * ASCII: convert ascii to hex
0000395C                          1097  * Input: pointer to start of string in A1
0000395C                          1098  * Output: hex value in register D1
0000395C                          1099  *-----------------------------------------------------------
0000395C  48E7 8000               1100  ASCII   MOVEM.L D0,-(SP)        ;save registers
00003960  4280                    1101          CLR.L   D0              ;clear for digit manipulation
00003962  4281                    1102          CLR.L   D1              ;clear for sum
00003964                          1103  
00003964  1019                    1104  CHAR    MOVE.B  (A1)+,D0        ;move digit
00003966  4A00                    1105          TST.B   D0              ;continue until end of string
00003968  6700 0014               1106          BEQ     EXITASCII
0000396C  B03C 0020               1107          CMP.B   #$20,D0         ;continue until empty space
00003970  6700 000C               1108          BEQ     EXITASCII
00003974                          1109  
00003974  61D0                    1110          BSR     DIGIT
00003976                          1111  
00003976  C3FC 0010               1112          MULS.W  #$10,D1         ;multiply by 10
0000397A  D280                    1113          ADD.L   D0,D1           ;add digit (Horner)
0000397C                          1114  
0000397C  60E6                    1115          BRA     CHAR
0000397E                          1116  
0000397E  4CDF 0001               1117  EXITASCII MOVEM.L (SP)+,D0      ;restore registers
00003982  4E75                    1118          RTS
00003984                          1119  
00003984                          1120  *-----------------------------------------------------------
00003984                          1121  * SPACE: print space
00003984                          1122  *-----------------------------------------------------------
00003984  48E7 C000               1123  SPACE   MOVEM.L D0/D1,-(SP)
00003988                          1124  
00003988  7220                    1125          MOVE.L  #$20,D1         ;print space
0000398A  103C 0006               1126          MOVE.B  #6,D0
0000398E  4E4F                    1127          TRAP    #15
00003990                          1128  
00003990  4CDF 0003               1129          MOVEM.L (SP)+,D0/D1
00003994  4E75                    1130          RTS
00003996                          1131  
00003996                          1132  *-----------------------------------------------------------
00003996                          1133  * CRLF: print carriage return followed by line feed
00003996                          1134  *-----------------------------------------------------------
00003996  48E7 C000               1135  CRLF    MOVEM.L D0/D1,-(SP)
0000399A                          1136  
0000399A  123C 000D               1137          MOVE.B  #$D,D1          ;print cr
0000399E  103C 0006               1138          MOVE.B  #6,D0
000039A2  4E4F                    1139          TRAP    #15
000039A4  123C 000A               1140          MOVE.B  #$A,D1          ;print lf
000039A8  103C 0006               1141          MOVE.B  #6,D0
000039AC  4E4F                    1142          TRAP    #15
000039AE                          1143  
000039AE  4CDF 0003               1144          MOVEM.L (SP)+,D0/D1
000039B2  4E75                    1145          RTS
000039B4                          1146  
00000050                          1147          ORG     $50
00000050= 48 65 6C 6C 6F 20 ...   1148  TEST    DC.B    'Hello World!',0
0000005D                          1149  
00000100                          1150          ORG     $100
00000100  227C 00000050           1151          MOVEA.L #TEST,A1
00000106  103C 000D               1152          MOVE.B  #13,D0
0000010A  4E4F                    1153          TRAP    #15
0000010C  4E75                    1154          RTS
0000010E                          1155  
00000200                          1156          ORG     $200
00000200  3240                    1157          MOVE.W  D0,A1
00000202  32C1                    1158          MOVE.W  D1,(A1)+
00000204  4E75                    1159          RTS
00000206                          1160  
00000300                          1161          ORG     $300
00000300  4240                    1162          CLR     D0
00000302  81C0                    1163          DIVS    D0,D0
00000304  4E75                    1164          RTS
00000306                          1165  
00000306                          1166          END     START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDR                3874
ADDR_MSG            15C3
ASC                 339C
ASCII               395C
BAD                 3506
BF                  346E
BFLOOP              3482
BMOV                3492
BMOVLOOP            34A8
BSCH                355E
BTST                34B8
BTSTLOOP1           34CA
BTSTLOOP2           34DC
BTSTLOOP3           34F6
BUBBLE              3394
BUS                 3826
BUS_MSG             15B0
CHAR                3964
CHK                 3904
CHK_MSG             161B
CMPNXT              33B4
COMP_TBL            106D
CRLF                3996
DF                  35D4
DIGIT               3946
DIV0                38EE
DIV0_MSG            15FD
DSC                 33A6
ECHO                3816
ENDLOOP1            34D6
ENDLOOP2            34F0
ENDSCH              35BA
EXBF                348C
EXBMOV              34B2
EXBTST              3558
EXITASCII           397E
EXITDIGIT           395A
EXITMAIN            3036
EXITPARSE           3272
EXMM                3452
FAILURE             15A4
GO                  35C0
GOOD                354C
HELP                3284
HELP1               116C
HELP10              152C
HELP11              1557
HELP12              1578
HELP2               118D
HELP2A              11EB
HELP3               123E
HELP4               12C4
HELP5               1335
HELP6               138B
HELP7               13FB
HELP8               147C
HELP9               14D1
HIGHER              3956
ILLI                38C2
ILLI_MSG            15DA
INPUT               101D
INVALID             100D
LENSCH              3574
LNEA                391A
LNEA_MSG            1653
LNEF                3930
LNEF_MSG            166C
MAIN                3012
MDSP                332A
MDSPEXIT            3378
MEMLOOP             334C
MM                  33C0
MMLONG              33FE
MMLONG2             344A
MMNXT               33CC
MMTRAP              3400
MMWORD              33F0
MMWORD2             343C
MS                  3458
NBF                 3196
NBMOV               31B4
NBSCH               31F0
NBTST               31D2
NCHAR               3278
NDF                 322C
NECHO               324A
NEXIT               3266
NGO                 320E
NHELP               3100
NMDSP               311E
NMM                 315A
NMS                 3178
NSORTW              313C
PARSE               30D4
PBF                 3184
PBMOV               31A2
PBSCH               31DE
PBTST               31C0
PDF                 321A
PECHO               3238
PEXIT               3256
PGO                 31FC
PHELP               30EE
PMDSP               310C
PMM                 3148
PMS                 3166
PRIV                38D8
PRIV_MSG            1630
PROMPT              1000
PSORTW              312A
REGA0               10F8
REGA1               10FC
REGA2               1100
REGA3               1104
REGA4               1108
REGA5               110C
REGA6               1110
REGA7               1114
REGD0               10D8
REGD1               10DC
REGD2               10E0
REGD3               10E4
REGD4               10E8
REGD5               10EC
REGD6               10F0
REGD7               10F4
REGPC               10C8
REGSR               10CC
REGSS               10D4
REGUS               10D0
REGVAL              1118
SAVE                307A
SAVELEN             3580
SCHFIND             3590
SCHLOOP             3582
SETUP               3038
SORTLOOP            3392
SORTW               337E
SPACE               3984
START               3000
SUCCESS             1594
SWAP                33AC
TEST                50
